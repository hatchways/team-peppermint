{"version":3,"sources":["themes/theme.js","types.js","context/user/userReducer.js","services/apiCalls/user.services.js","context/user/userContext.js","hocs/privateRoute.js","hocs/unPrivateRoute.js","assets/login-signup-bgImage.png","components/bgImage/index.js","containers/Forms/style.js","containers/Forms/Login/index.js","containers/Forms/Register/index.js","containers/LandingPage/index.js","containers/Sidebar/style.js","containers/SidebarHeader/style.js","components/UserAvatar/avatar.png","components/UserAvatar/style.js","components/AvatarBadge/index.js","components/UserAvatar/index.js","containers/SidebarHeader/index.js","containers/SidebarInfo/style.js","containers/ChatList/style.js","components/ChatItem/style.js","context/language/languageContext.js","services/apiCalls/conversation.services.js","context/currentConversation/currentConversationReducer.js","context/currentConversation/currentConversationContext.js","components/ChatItem/index.js","context/conversations/conversationsReducer.js","context/conversations/conversationsContext.js","containers/ChatList/index.js","containers/ContactsList/style.js","components/ContactItem/style.js","context/contacts/contactsReducer.js","context/contacts/contactsContext.js","components/ContactItem/index.js","components/SearchContact/style.js","components/SearchContact/index.js","containers/ContactsList/index.js","containers/SidebarInfo/index.js","containers/Sidebar/index.js","components/MessageItem/style.js","components/MessageItem/index.js","utils/dateUtils.js","components/MessageInput/styles.js","components/EmojiButton/index.js","context/messages/helper.js","components/MessageInput/helper.js","components/MessageInput/index.js","containers/ChatView/styles.js","containers/ChatHeader/style.js","containers/ChatHeader/index.js","containers/ChatView/index.js","containers/Home/styles.js","containers/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","typography","fontFamily","fontSize","h1","caption","palette","primary","main","ActionTypes","SET_CONVERSATIONS","SET_MESSAGES","SET_CURRENT_CONVERSATION","PUSH_MESSAGE","SET_SOCKET","UPDATE_USER_IMAGE","SET_USER_DATA","SET_CONTACTS","FETCH_CONVERSATIONS","UPDATE_CONVERSATIONS","ADD_CONVERSATION","ADD_CONTACT","Action","type","payload","UserReducer","state","action","user","pictureURL","url","imageUrl","socket","headers","UserServices","login","Axios","method","data","register","logout","get","isAuthenticated","then","response","status","email","name","role","getUserConversations","getUserContacts","searchUsersByEmailOrName","query","addContact","contactID","UserStore","createContext","UserDispatch","initialState","isLoaded","_id","language","UserProvider","children","useReducer","dispatch","useEffect","res","catch","err","console","error","message","socketIOClient","userID","disconnect","Provider","value","useUserStore","useContext","PrivateRoute","Component","component","rest","roles","render","props","to","pathname","from","location","UnPrivateRoute","useStyles","makeStyles","imageContainer","backgroundImage","bgImage","backgroundRepeat","backgroundSize","height","width","marginRight","gradientContainer","display","justifyItems","alignItems","iconStyle","color","textStyle","fontWeight","textAlign","marginBottom","marginTop","BackgroundImage","classes","className","root","background","form","flexDirection","formField","margin","spacing","submitButton","borderRadius","Login","renderRegister","userDispatch","useState","setMessage","initialValues","password","onSubmit","loginValues","values","Typography","variant","label","as","TextField","Button","onClick","SingUpSchema","Yup","shape","max","required","min","confirmPassword","oneOf","registerValues","Register","history","renderLogin","userState","log","push","validationSchema","errors","touched","helperText","Select","MenuItem","LandingPage","isLogin","setIsLogin","Grid","container","justify","item","xs","backgroundColor","justifyContent","minHeight","leftRightSideStyle","padding","badge","top","right","logoutStyle","textDecoration","withStyles","boxShadow","paper","Badge","position","left","animation","border","content","transform","opacity","avatar","isOnline","AvatarBadge","badgeContent","anchorOrigin","vertical","horizontal","UserAvatar","userPicture","undefined","includes","Avatar","alt","src","SidebarHeader","open","setOpen","anchorEl","setAnchorEl","handleClose","handleSave","files","a","Tooltip","title","placement","arrow","ButtonBase","aria-controls","aria-haspopup","event","currentTarget","style","marginLeft","MoreHoriz","Menu","id","keepMounted","Boolean","onClose","onSave","showPreviews","maxFileSize","flexGrow","overflow","tabs","borderColor","tabPanel","search","minWidth","breakpoints","up","searchIcon","pointerEvents","clearIcon","debounceInput","outline","collapse","alert","maxHeight","avatarNameContainer","nameContainer","alignContent","chip","LanguageContext","getMessageTextVersion","isOriginal","targetLanguage","Object","textVersions","useLanguageContext","LanguageProvider","isOriginalLanguage","setIsOriginalLanguage","toggleOrginalLanguage","useCallback","ConversationServices","sendMessage","conversationID","fetchConversationById","CurrentConversationReducer","messages","CurrentConversationStore","CurrentConversationDispatch","conversationTitle","users","lastMessage","useCurrentConversationStore","useCurrentConversationDispatch","CurrentConversationProvider","conversation","ChatItem","index","selected","lastMessageObject","setLastMessageObject","currentConversation","currentConversationDispatch","isGroupConversation","length","otherUsers","filter","u","chatItemTitle","on","messageData","off","ListItem","button","gutterBottom","ConversationsReducer","conversations","ConversationsStore","ConversationsDispatch","useConversationsStore","ConversationsProvider","ChatList","List","map","buttonsContainer","contactButton","buttonBase","contactName","ContactsReducer","contacts","UPDATE_CONTACT_STATUS","idx","indexOf","contact","ContactsStore","ContactsDispatch","ContactsProvider","ContactItem","unknown","removeFromUknown","contactsDispatch","conversationsDispatch","stringHash","sort","join","updateContactStatus","disabled","conversationPayload","find","IconButton","newContact","newConversation","searchBar","toggleButton","toggleButtonSelected","success","SearchContact","timeout","updateContactList","updateUnknownList","isGlobal","setIsGlobal","handleSearchSubmit","searchQuery","toLowerCase","newContactList","startsWith","setFieldValue","seachTextField","placeholder","InputBase","onChange","e","text","clearTimeout","setTimeout","handleSearchChange","target","endAdornment","ContactsList","displayContacts","setDisplayContacts","unknownContacts","setUnknownContacts","removeContactFromList","prevState","newState","splice","i","Divider","TabPanel","other","hidden","aria-labelledby","Box","a11yProps","SidebarInfo","tabNumber","setTabNumber","AppBar","maxWidth","Tabs","newValue","aria-label","Tab","Sidebar","isMyMessage","messageContianer","messageBox","borderBottomRightRadius","borderTopLeftRadius","messageDetails","imageIcon","image","objectFit","MessageItem","date","sender","createdAt","ISO6391","getCode","moment","format","textField","EmojiButton","onSelect","anchorEmojisMenu","setAnchorEmojisMenu","onEmojiClick","_","emojiObject","emoji","groupNames","smileys_people","native","translateText","languageCode","axios","post","process","translations","translatedText","generateMessageVersions","currentUser","conversationUser","newVersion","unescape","MessageInput","inputValues","handleMessageSubmit","resetForm","emit","messageObject","InputProps","InputAdornment","messagesContainer","overflowY","scrollbarWidth","onOfflineStyle","ChatHeader","Switch","checked","inputProps","ChatView","bottomDivRef","useRef","getSenderData","current","scrollIntoView","behavior","ref","Home","require","config","App","ThemeProvider","CssBaseline","Container","exact","path","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a5255f7.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: '\"Poppins\", sans-serif',\r\n    fontSize: 16,\r\n    h1: {\r\n      // could customize the h1 variant as well\r\n    },\r\n    caption:{\r\n      \r\n    }\r\n  },\r\n  palette: {\r\n    primary: { main: \"#3A8DFF\" },\r\n  },\r\n\r\n});\r\n","export const ActionTypes = {\r\n    SET_CONVERSATIONS: \"SET_CONVERSATIONS\",\r\n    SET_MESSAGES: 'SET_MESSAGES',\r\n    SET_CURRENT_CONVERSATION: \"SET_CURRENT_CONVERSATION\",\r\n    PUSH_MESSAGE: \"PUSH_MESSAGE\",\r\n    SET_SOCKET: \"SET_SOCKET\",\r\n    UPDATE_USER_IMAGE: \"UPDATE_USER_IMAGE\",\r\n    SET_USER_DATA: \"SET_USER_DATA\",\r\n    SET_CONTACTS: \"RESET_LISTS\",\r\n    FETCH_CONVERSATIONS: \"FETCH_CONVERSATIONS\",\r\n    UPDATE_CONVERSATIONS: \"UPDATE_CONVERSATIONS\",\r\n    ADD_CONVERSATION: \"RESET_CONVERSATIONS\",\r\n    ADD_CONTACT: \"ADD_CONTACT\",\r\n\r\n}\r\nconst Action = (type, payload) => ({ type, payload })\r\nexport default Action","import { ActionTypes } from \"types\";\r\n\r\nconst UserReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_USER_DATA: {\r\n      return { ...state, ...action.payload }\r\n    }\r\n    case ActionTypes.UPDATE_USER_IMAGE: {\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          pictureURL: { url: action.payload.imageUrl }\r\n        }\r\n      };\r\n    }\r\n    case ActionTypes.SET_SOCKET: {\r\n      return {\r\n        ...state,\r\n        socket: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default UserReducer","import Axios from 'axios'\r\nconst headers = {\r\n    'Content-Type': 'application/json',\r\n}\r\n\r\nconst UserServices = {\r\n    login: (user) => {\r\n        return Axios('/api/user/login', {\r\n            method: 'POST',\r\n            data: user,\r\n            headers\r\n        })\r\n\r\n    },\r\n    register: user => {\r\n        return Axios('/api/user/', {\r\n            method: 'POST',\r\n            data: user,\r\n            headers\r\n        })\r\n    },\r\n    logout: () => {\r\n        return Axios.get('/api/user/logout')\r\n    },\r\n    isAuthenticated: () => {\r\n        return Axios.get('/api/user/authenticated')\r\n            .then(response => {\r\n                if (response.status !== 401)\r\n                    return response\r\n                else\r\n                    return { isAuthenticated: false, user: { email: \"\", name: \"\", role: \"\" } }\r\n            })\r\n    },\r\n    getUserConversations: () => {\r\n        return Axios.get('/api/user/conversations')\r\n    },\r\n    getUserContacts: () => {\r\n        return Axios.get('/api/user/contacts')\r\n    },\r\n    searchUsersByEmailOrName: (query) => {\r\n        return Axios.get(`/api/user?searchTerm=${query}`)\r\n    },\r\n    addContact: (contactID) => {\r\n        return Axios(`/api/user/contacts`, {\r\n            method: 'POST',\r\n            data: { contactID },\r\n            headers,\r\n        })\r\n    }\r\n\r\n}\r\nexport default UserServices","import React, { useReducer, useContext, createContext, useEffect } from \"react\";\r\nimport UserReducer from \"./userReducer\";\r\n\r\nimport UserServices from \"services/apiCalls/user.services\";\r\nimport Action, { ActionTypes } from 'types'\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nconst UserStore = createContext();\r\nconst UserDispatch = createContext();\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  isLoaded: false,\r\n  user: {\r\n    _id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    language: \"\",\r\n    pictureURL: { url: \"\" },\r\n\r\n  },\r\n  socket: null,\r\n}\r\nconst UserProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(UserReducer, initialState);\r\n  useEffect(() => {\r\n    UserServices.isAuthenticated()\r\n      .then(res => {\r\n        dispatch(Action(ActionTypes.SET_USER_DATA, res.data))\r\n      })\r\n      .catch(err => console.error(err.message))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (state.isAuthenticated && !state.socket) {\r\n      dispatch(Action(ActionTypes.SET_SOCKET, socketIOClient({\r\n        query: {\r\n          userID: state.user._id\r\n        }\r\n      })))\r\n    }\r\n    return () => state.socket?.disconnect\r\n  }, [state])\r\n  return (\r\n    <UserStore.Provider value={state}>\r\n      <UserDispatch.Provider value={dispatch}>\r\n        {children}\r\n      </UserDispatch.Provider>{\" \"}\r\n    </UserStore.Provider>\r\n  );\r\n}\r\n\r\nconst useUserStore = () => useContext(UserStore)\r\nconst useUserDispatch = () => useContext(UserDispatch)\r\nexport {\r\n  useUserStore,\r\n  useUserDispatch,\r\n  UserProvider,\r\n};\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useUserStore } from 'context/user/userContext'\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => {\r\n    const { isAuthenticated } = useUserStore()\r\n    return (\r\n        <Route {...rest} render={props => {\r\n            if (!isAuthenticated)\r\n                return <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n            return <Component {...props} />\r\n        }} />\r\n\r\n    )\r\n}\r\nexport default PrivateRoute","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useUserStore } from 'context/user/userContext'\r\nconst UnPrivateRoute = ({ component: Component, ...rest }) => {\r\n    const { isAuthenticated } = useUserStore()\r\n    return (\r\n        <Route {...rest} render={props => {\r\n            if (isAuthenticated)\r\n                return <Redirect to={{ pathname: '/home', state: { from: props.location } }} />\r\n            return <Component {...props} />\r\n        }} />\r\n    )\r\n}\r\nexport default UnPrivateRoute","export default __webpack_public_path__ + \"static/media/login-signup-bgImage.0c5628a9.png\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport bgImage from \"../../assets/login-signup-bgImage.png\";\r\nimport SmsRoundedIcon from \"@material-ui/icons/SmsRounded\";\r\nimport TranslateRoundedIcon from \"@material-ui/icons/TranslateRounded\";\r\n\r\nconst useStyles = makeStyles({\r\n  imageContainer: {\r\n    backgroundImage: `url(${bgImage})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    height: \"100vh\",\r\n    width: \"40vw\",\r\n    marginRight: 20,\r\n  },\r\n  gradientContainer: {\r\n    backgroundImage: \"linear-gradient(#3a8cffca, #86b8ffc9)\",\r\n    height: \"100vh\",\r\n    width: \"40vw\",\r\n    display: \"grid\",\r\n    justifyItems: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  iconStyle: {\r\n    fontSize: 70,\r\n    color: \"rgba(255, 255, 255, 0.80)\",\r\n  },\r\n  textStyle: {\r\n    color: \"rgba(255, 255, 255, 0.95)\",\r\n    fontWeight: \"200\",\r\n    fontSize: 40,\r\n    width: \"70%\",\r\n    textAlign: \"center\",\r\n    marginBottom: -80,\r\n    marginTop: -80,\r\n  },\r\n  [`@media (max-width:560px)`]: {\r\n    imageContainer: {\r\n      height: \"20vh\",\r\n      width: \"100vw\",\r\n    },\r\n    gradientContainer: {\r\n      height: \"20vh\",\r\n      width: \"100vw\",\r\n    },\r\n    textStyle: {\r\n      fontSize: 25,\r\n    },\r\n  },\r\n});\r\n\r\nexport default function BackgroundImage() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.imageContainer}>\r\n      <div className={classes.gradientContainer}>\r\n        <SmsRoundedIcon className={classes.iconStyle} />\r\n        <h3 className={classes.textStyle}>\r\n          Converse with anyone with any language\r\n        </h3>\r\n        <TranslateRoundedIcon className={classes.iconStyle} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background:'#FFFFFF',\r\n        width: '100%',\r\n        height: '100%',\r\n        display:'flex',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    formField: {\r\n        width: '70%',\r\n        margin: theme.spacing(1, 0),\r\n    },\r\n    submitButton: {\r\n        width: '50%',\r\n        borderRadius: 0\r\n    }\r\n}));\r\n","import React, { useState } from 'react'\r\nimport { Button, Typography, TextField } from '@material-ui/core'\r\nimport { useUserDispatch } from 'context/user/userContext'\r\nimport UserServices from 'services/apiCalls/user.services'\r\nimport { Formik, Field, Form } from 'formik';\r\nimport Action, { ActionTypes } from 'types';\r\nimport { useStyles } from '../style'\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nconst Login = ({ renderRegister }) => {\r\n\r\n    const userDispatch = useUserDispatch()\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const loginValues = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    const classes = useStyles()\r\n    const handleLoginSubmit = (loginValues) => {\r\n        UserServices.login(loginValues)\r\n            .then(response => {\r\n                userDispatch(Action(ActionTypes.SET_USER_DATA, response.data))\r\n            })\r\n            .catch(err => setMessage(err))\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <Formik\r\n                initialValues={loginValues}\r\n                onSubmit={handleLoginSubmit}\r\n            >\r\n                {({ values }) => (\r\n                    <Form className={classes.form}>\r\n                        <Typography variant=\"h3\">Login</Typography>\r\n                        <Field\r\n                            className={classes.formField}\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            label=\"Email\"\r\n                            variant='outlined'\r\n                            as={TextField}\r\n                        />\r\n                        <Field className={classes.formField} name=\"password\" type=\"password\" label=\"Password\" variant='outlined' as={TextField} />\r\n\r\n                        <Button>Forgot Password?</Button>\r\n\r\n\r\n                        <Button\r\n                            className={classes.submitButton}\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n\r\n                        >\r\n                            <Typography variant=\"h5\">\r\n                                Login\r\n                            </Typography>\r\n                        </Button>\r\n                        <Button onClick={renderRegister}>Create Account</Button>\r\n                    </Form>\r\n                )}\r\n\r\n            </Formik>\r\n            {message && <div> {message}</div>}\r\n        </div>\r\n    )\r\n}\r\nexport default Login","import React, { useEffect, useState } from 'react'\r\nimport { Link, Button, Typography, TextField, MenuItem, Select, Collapse } from '@material-ui/core'\r\nimport { useUserStore } from 'context/user/userContext'\r\nimport UserServices from 'services/apiCalls/user.services'\r\nimport { Formik, Field, Form } from 'formik';\r\nimport { useStyles } from '../style'\r\nimport * as Yup from 'yup';\r\nimport { Alert } from '@material-ui/lab';\r\nconst SingUpSchema = Yup.object().shape({\r\n    name: Yup.string().max(50, 'Too Long').required('Required'),\r\n    email: Yup.string().email('Invalid Email').required('Required'),\r\n    password: Yup.string().min(8, 'Password is too short, should be at least 8 characters').required('Required'),\r\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n    language: Yup.string().required('Required')\r\n})\r\nconst registerValues = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    language: 'english'\r\n}\r\nconst Register = ({ history, renderLogin }) => {\r\n\r\n    const userState = useUserStore()\r\n    const [message, setMessage] = useState(null)\r\n    const classes = useStyles()\r\n\r\n    const handleLoginSubmit = (registerValues) => {\r\n        UserServices.register(registerValues)\r\n            .then(response => {\r\n                console.log(response)\r\n                if (response.status !== 'error')\r\n                    history.push('/home')\r\n                else\r\n                    setMessage(response.message)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    useEffect(() => { console.log(userState) }, [userState])\r\n    return (\r\n        <div className={classes.root}>\r\n            <Formik\r\n                initialValues={registerValues}\r\n                onSubmit={handleLoginSubmit}\r\n                validationSchema={SingUpSchema}\r\n            >\r\n                {({ errors, touched }) => (\r\n                    <Form className={classes.form}>\r\n                        <Typography variant=\"h3\">Sign Up</Typography>\r\n                        <Field\r\n                            className={classes.formField}\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            label=\"Email\"\r\n                            variant=\"outlined\"\r\n                            error={errors.email && touched.email}\r\n                            helperText={errors.email}\r\n                            as={TextField}\r\n                        />\r\n                        <Field\r\n                            className={classes.formField}\r\n                            name=\"name\"\r\n                            type=\"text\"\r\n                            label=\"Name\"\r\n                            variant=\"outlined\"\r\n                            error={errors.name && touched.name}\r\n                            helperText={errors.name}\r\n                            as={TextField}\r\n                        />\r\n                        <Field\r\n                            className={classes.formField}\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            variant=\"outlined\"\r\n                            error={errors.password && touched.password}\r\n                            helperText={errors.password}\r\n                            as={TextField}\r\n                        />\r\n                        <Field\r\n                            className={classes.formField}\r\n                            name=\"confirmPassword\"\r\n                            type=\"password\"\r\n                            label=\"Confirm Password\"\r\n                            variant=\"outlined\"\r\n                            error={errors.confirmPassword && touched.confirmPassword}\r\n                            helperText={errors.confirmPassword}\r\n                            as={TextField}\r\n                        />\r\n                        <Field className={classes.formField} name=\"language\" label={'Language'} variant=\"outlined\" as={Select} >\r\n                            <MenuItem value=\"english\">English</MenuItem>\r\n                            <MenuItem value=\"french\">French</MenuItem>\r\n                            <MenuItem value=\"chinese\">Chinese</MenuItem>\r\n                            <MenuItem value=\"russian\">Russian</MenuItem>\r\n                        </Field>\r\n                        <Button\r\n                            className={classes.submitButton}\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            <Typography variant=\"h5\">\r\n                                Sign Up\r\n                            </Typography>\r\n                        </Button>\r\n                        <Button onClick={renderLogin}>Sign In</Button>\r\n                    </Form>\r\n                )}\r\n\r\n            </Formik>\r\n            {message && <div> {message}</div>}\r\n        </div>\r\n    )\r\n}\r\nexport default Register","import React, { useState } from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport BackgroundImage from '../../components/bgImage'\r\nimport Login from 'containers/Forms/Login'\r\nimport Register from 'containers/Forms/Register'\r\nconst LandingPage = ({ history }) => {\r\n    const [isLogin, setIsLogin] = useState(true)\r\n    const renderLogin = () => setIsLogin(true)\r\n    const renderRegister = () => setIsLogin(false)\r\n    return (\r\n        <Grid container justify='center' alignItems='stretch'>\r\n            <Grid item xs={6}>\r\n                <BackgroundImage />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                {isLogin ?\r\n                    <Login history={history} renderRegister={renderRegister} /> :\r\n                    <Register history={history} renderLogin={renderLogin} />\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\nexport default LandingPage","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    width: \"35%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#f5f7fb\",\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    minHeight: \"10vh\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  leftRightSideStyle: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  badge: { top: 63, right: 5 },\r\n  typography: {\r\n    fontWeight: 600,\r\n    textAlign: \"center\",\r\n  },\r\n  logoutStyle: {\r\n    color: \"black\",\r\n    textDecoration: \"none\",\r\n  },\r\n  [`@media (max-width:400px)`]: {\r\n    root: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    leftRightSideStyle: {\r\n      flexDirection: \"column\",\r\n      height: \"10vh\",\r\n      padding: 0,\r\n    },\r\n    typography: {\r\n      fontSize: \"1.3rem\",\r\n    },\r\n  },\r\n}));\r\n","export default __webpack_public_path__ + \"static/media/avatar.c2a95cb3.png\";","import Badge from \"@material-ui/core/Badge\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const OfflineBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: \"#D3D3D3\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    width: theme.spacing(1.4),\r\n    height: theme.spacing(1.4),\r\n    borderRadius: \"50%\",\r\n    top: theme.spacing(5),\r\n    right: theme.spacing(0.5),\r\n  },\r\n}))(Badge);\r\n\r\nexport const OnlineBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    width: theme.spacing(1.1),\r\n    height: theme.spacing(1.1),\r\n    borderRadius: \"50%\",\r\n    top: theme.spacing(5),\r\n    right: theme.spacing(0.5),\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"$ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      marginRight: theme.spacing(3),\r\n    },\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(6.5),\r\n    height: theme.spacing(6.5),\r\n  },\r\n  [`@media (max-width:400px)`]: {\r\n    root: {\r\n      \"& > *\": {\r\n        marginRight: theme.spacing(1),\r\n      },\r\n      // marginTop: 50,\r\n    },\r\n  },\r\n}));\r\n","import { Badge, makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    badge: ({ isOnline }) => ({\r\n        backgroundColor: isOnline ? \"#44b700\" : \"#D3D3D3\",\r\n        boxShadow: '0 0 0 2px #FFF',\r\n        height: theme.spacing(1.2),\r\n        width: theme.spacing(1.2),\r\n        borderRadius: '50%',\r\n        marginBottom: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    }),\r\n\r\n}))\r\n\r\nconst AvatarBadge = ({ children, isOnline }) => {\r\n    const classes = useStyles({ isOnline })\r\n    return (\r\n        <Badge\r\n            classes={{\r\n                badge: classes.badge\r\n            }}\r\n            badgeContent=''\r\n            variant='dot'\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right'\r\n            }}\r\n        >\r\n            { children}\r\n        </Badge >\r\n    )\r\n}\r\nexport default AvatarBadge","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport avatar from \"./avatar.png\";\r\nimport { useStyles } from \"./style\";\r\nimport AvatarBadge from \"components/AvatarBadge\";\r\nconst UserAvatar = ({ imageUrl, isOnline }) => {\r\n  const classes = useStyles({ isOnline });\r\n  let userPicture = \"\";\r\n\r\n  if (\r\n    imageUrl !== undefined &&\r\n    imageUrl.url !== undefined &&\r\n    imageUrl.url.includes(\"http\")\r\n  ) {\r\n    userPicture = imageUrl.url;\r\n  } else {\r\n    userPicture = avatar;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AvatarBadge isOnline={isOnline}>\r\n        <Avatar\r\n          variant=\"circular\"\r\n          alt=\"Badge\"\r\n          src={userPicture}\r\n          className={classes.avatar}\r\n        />\r\n      </AvatarBadge>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserAvatar;\r\n\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  ButtonBase,\r\n  Menu,\r\n  MenuItem,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { useStyles } from \"./style\";\r\nimport { DropzoneDialog } from \"material-ui-dropzone\";\r\nimport { MoreHoriz } from \"@material-ui/icons\";\r\nimport UserAvatar from \"../../components/UserAvatar/index\";\r\nimport {\r\n  useUserStore,\r\n} from \"../../context/user/userContext\";\r\nimport UserServices from \"services/apiCalls/user.services\";\r\n\r\n\r\n\r\n\r\nconst SidebarHeader = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const { user } = useUserStore()\r\n  const classes = useStyles();\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleSave = async (files) => {\r\n\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    UserServices.logout()\r\n      .then(response => console.log(response))\r\n      .catch(err => console.error(err))\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.leftRightSideStyle}>\r\n        <UserAvatar imageUrl={user.pictureURL} />\r\n        <Typography variant=\"body2\" className={classes.typography}>\r\n          {user.name}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.leftRightSideStyle}>\r\n        <Tooltip title=\"More actions\" placement=\"bottom\" arrow>\r\n          <ButtonBase\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n            style={{ marginLeft: 20 }}\r\n          >\r\n            <MoreHoriz />\r\n          </ButtonBase>\r\n        </Tooltip>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n          <MenuItem onClick={() => setOpen(true)}>Replace picture</MenuItem>\r\n          <MenuItem onClick={handleLogout}>\r\n            Log out\r\n          </MenuItem>\r\n        </Menu>\r\n        <DropzoneDialog\r\n          open={open}\r\n          onSave={handleSave}\r\n          showPreviews={true}\r\n          maxFileSize={2000000}\r\n          onClose={() => {\r\n            setOpen(false);\r\n            handleClose();\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SidebarHeader;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"transparent\",\r\n    overflow: \"hidden\",\r\n  },\r\n  tabs: {\r\n    backgroundColor: \"#f5f7fb\",\r\n    borderColor: \"none\",\r\n  },\r\n  tabPanel: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  search: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"#e9eef9\",\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    minWidth: \"100%\",\r\n    height: theme.spacing(7),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  clearIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  debounceInput: {\r\n    border: \"none\",\r\n    height: \"100%\",\r\n    width: \"70%\",\r\n    backgroundColor: \"transparent\",\r\n    fontSize: \"1.3rem\",\r\n    right: 0,\r\n    outline: \"none\",\r\n  },\r\n  collapse: {\r\n    textAlign: \"center\",\r\n    marginBottom: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n  alert: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  [`@media (max-width:400px)`]: {\r\n    tabs: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n    maxHeight: \"65vh\",\r\n    flexGrow: 1,\r\n    overflow: \"auto\",\r\n    backgroundColor: \"transparent\",\r\n    \"-ms-overflow-style\": \"none\",\r\n    \"scrollbar-width\": \"none\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    // justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n    width: \"100%\",\r\n    backgroundColor: \"#f9fafc\",\r\n    boxShadow: \"0 0 1px 0 grey\",\r\n  },\r\n  avatarNameContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"75%\",\r\n    height: \"100%\",\r\n  },\r\n  nameContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  chip: {\r\n    display: \"block\",\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  [`@media (max-width:360px)`]: {\r\n    avatarNameContainer: {\r\n      flexDirection: \"column\",\r\n      justifyContent:'center'\r\n    },\r\n  },\r\n}));\r\n","import React, { createContext, useCallback, useContext, useState } from 'react'\r\nconst LanguageContext = createContext()\r\n\r\nexport const getMessageTextVersion = (message, isOriginal, targetLanguage) => {\r\n    if (!message) return ''\r\n    if (isOriginal)\r\n        return Object.values(message.textVersions)[0]\r\n    else\r\n        return message.textVersions[targetLanguage] || Object.values(message.textVersions)[0]\r\n}\r\nconst LanguageProvider = ({ children }) => {\r\n    const [isOriginalLanguage, setIsOriginalLanguage] = useState(false)\r\n    const toggleOrginalLanguage = useCallback(() => {\r\n        setIsOriginalLanguage(!isOriginalLanguage)\r\n    }, [isOriginalLanguage])\r\n    return (\r\n        <LanguageContext.Provider value={{ isOriginalLanguage, toggleOrginalLanguage }}>\r\n            {children}\r\n        </LanguageContext.Provider>\r\n    )\r\n}\r\nexport const useLanguageContext = () => useContext(LanguageContext)\r\nexport default LanguageProvider","import Axios from 'axios'\r\nconst headers = {\r\n    'Content-Type': 'application/json',\r\n}\r\n\r\nconst ConversationServices = {\r\n    sendMessage: (conversationID, message) => {\r\n        return Axios(`/api/conversations/${conversationID}/message`, {\r\n            method: 'POST',\r\n            data: message,\r\n            headers,\r\n        })\r\n    },\r\n    fetchConversationById: (conversationID) => {\r\n        return Axios.get(`/api/conversations/${conversationID}`)\r\n    }\r\n}\r\nexport default ConversationServices","import { ActionTypes } from \"types\";\r\n\r\nconst CurrentConversationReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SET_CURRENT_CONVERSATION: {\r\n            return { ...state, ...action.payload }\r\n        }\r\n        case ActionTypes.SET_MESSAGES: {\r\n            return { ...state, messages: action.payload }\r\n        }\r\n        case ActionTypes.PUSH_MESSAGE: {\r\n            return { ...state, messages: [...state.messages, action.payload] }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default CurrentConversationReducer","import React, { createContext, useContext, useEffect, useReducer } from 'react'\r\nimport ConversationServices from 'services/apiCalls/conversation.services'\r\nimport Action, { ActionTypes } from 'types'\r\nimport CurrentConversationReducer from './currentConversationReducer'\r\nconst CurrentConversationStore = createContext()\r\nconst CurrentConversationDispatch = createContext()\r\nconst initialState = {\r\n    _id: '',\r\n    conversationID: '',\r\n    conversationTitle: '',\r\n    users: '',\r\n    messages: [],\r\n    lastMessage: ''\r\n}\r\nconst CurrentConversationProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(CurrentConversationReducer, initialState)\r\n\r\n\r\n    useEffect(() => {\r\n        if (state._id !== '')\r\n            ConversationServices.fetchConversationById(state._id)\r\n                .then((response) => {\r\n                    dispatch(Action(ActionTypes.SET_MESSAGES, response.data.conversation.messages));\r\n                })\r\n                .catch((err) => console.log(err))\r\n    }, [state._id])\r\n    return (\r\n        <CurrentConversationStore.Provider value={state}>\r\n            <CurrentConversationDispatch.Provider value={dispatch}>\r\n                {children}\r\n            </CurrentConversationDispatch.Provider>\r\n        </CurrentConversationStore.Provider >\r\n    )\r\n}\r\nexport const useCurrentConversationStore = () => useContext(CurrentConversationStore)\r\nexport const useCurrentConversationDispatch = () => useContext(CurrentConversationDispatch)\r\nexport default CurrentConversationProvider","import React, { useState, useEffect } from \"react\";\r\nimport { useStyles } from \"./style\";\r\nimport UserAvatar from \"../UserAvatar\";\r\nimport { Typography, ListItem } from \"@material-ui/core\";\r\nimport { useUserStore } from \"../../context/user/userContext\";\r\nimport { useLanguageContext, getMessageTextVersion } from \"context/language/languageContext\";\r\nimport { useCurrentConversationDispatch, useCurrentConversationStore } from \"context/currentConversation/currentConversationContext\";\r\nimport Action, { ActionTypes } from \"types\";\r\n\r\n\r\nconst ChatItem = ({ conversation, index, selected }) => {\r\n  const classes = useStyles()\r\n  const { user, socket } = useUserStore()\r\n  const { _id, users, conversationTitle, lastMessage } = conversation\r\n  const { isOriginalLanguage } = useLanguageContext()\r\n  const [lastMessageObject, setLastMessageObject] = useState(lastMessage)\r\n  const currentConversation = useCurrentConversationStore()\r\n  const currentConversationDispatch = useCurrentConversationDispatch()\r\n  const isGroupConversation = users.length > 2\r\n  const otherUsers = users.filter(u => u._id !== user._id)\r\n  const chatItemTitle = isGroupConversation ? conversationTitle || 'Group Chat' : otherUsers[0].name\r\n\r\n\r\n  const onChatClick = () => {\r\n    currentConversationDispatch(Action(ActionTypes.SET_CURRENT_CONVERSATION, conversation));\r\n  };\r\n  useEffect(() => {\r\n    socket.on(`${conversation._id}-message`, messageData => {\r\n      setLastMessageObject(messageData)\r\n      if (currentConversation._id === _id)\r\n        currentConversationDispatch(Action(ActionTypes.PUSH_MESSAGE, messageData))\r\n    })\r\n    return () => socket.off(`${conversation._id}-message`)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  return (\r\n    <ListItem\r\n      button\r\n      className={classes.root}\r\n      onClick={onChatClick}\r\n      selected={currentConversation?._id === _id}\r\n    >\r\n      <div className={classes.avatarNameContainer}>\r\n        {users.length === 1 && (\r\n          <UserAvatar\r\n            imageUrl={\"\"}\r\n          />\r\n        )}\r\n        <div className={classes.nameContainer}>\r\n          <Typography\r\n            variant=\"body1\"\r\n            gutterBottom\r\n          >\r\n            {chatItemTitle}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            gutterBottom\r\n          >\r\n            {getMessageTextVersion(lastMessageObject, isOriginalLanguage, user.language)}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default ChatItem\r\n\r\n","import { ActionTypes } from \"types\";\r\n\r\nconst ConversationsReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SET_CONVERSATIONS: {\r\n            return { ...state, conversations: action.payload }\r\n        }\r\n        case ActionTypes.ADD_CONVERSATION: {\r\n            return {...state, conversations: action.payload}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default ConversationsReducer","import React, { useReducer, useContext, createContext, useEffect } from \"react\";\r\nimport ConversationsReducer from \"./conversationsReducer\";\r\n\r\nimport UserServices from \"services/apiCalls/user.services\";\r\nimport Action, { ActionTypes } from 'types'\r\nimport { useUserStore } from \"context/user/userContext\";\r\n\r\nexport const ConversationsStore = createContext();\r\nexport const ConversationsDispatch = createContext();\r\n\r\nconst initialState = {\r\n    conversations: []\r\n}\r\nconst ConversationsProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(ConversationsReducer, initialState);\r\n    const { isAuthenticated } = useUserStore()\r\n    useEffect(() => {\r\n        if (isAuthenticated)\r\n            UserServices.getUserConversations()\r\n                .then(response => {\r\n                    dispatch(Action(ActionTypes.SET_CONVERSATIONS, response.data.conversations))\r\n                })\r\n                .catch(err => console.log(err))\r\n    }, [isAuthenticated])\r\n    return (\r\n        <ConversationsStore.Provider value={state}>\r\n            <ConversationsDispatch.Provider value={dispatch}>\r\n                {children}\r\n            </ConversationsDispatch.Provider>\r\n        </ConversationsStore.Provider>\r\n    );\r\n}\r\n\r\nexport const useConversationsStore = () => useContext(ConversationsStore)\r\nexport const useConversationsDispatch = () => useContext(ConversationsDispatch)\r\nexport default ConversationsProvider\r\n","import React from \"react\";\r\nimport { useStyles } from \"./style\";\r\nimport ChatItem from \"../../components/ChatItem\";\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport List from \"@material-ui/core/List\";\r\nimport { useConversationsStore } from \"context/conversations/conversationsContext\";\r\n\r\nconst ChatList = () => {\r\n  const classes = useStyles();\r\n  const { conversations } = useConversationsStore()\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {conversations.length > 0 ?\r\n        conversations.map((conversation, index) => {\r\n          return (\r\n            <ChatItem\r\n              key={index}\r\n              conversation={conversation}\r\n              index={index}\r\n\r\n            />\r\n          )\r\n        }) :\r\n        <Typography\r\n          variant=\"body1\"\r\n          color=\"primary\"\r\n          gutterBottom\r\n          style={{ color: \"black\", textAlign: \"center\" }}\r\n        >\r\n          No group chats\r\n      </Typography>}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  buttonsContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  }\r\n\r\n}))\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: 'center',\r\n    width: '100%'\r\n  },\r\n  contactButton: {\r\n    width: '100%',\r\n    justifyContent: 'start',\r\n    '&:focus': {\r\n      outline: 'none'\r\n    }\r\n  },\r\n  avatarNameContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"50%\",\r\n    height: \"100%\",\r\n  },\r\n  chip: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  buttonBase: {\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n    padding: 10,\r\n    borderRadius: \"50%\",\r\n  },\r\n  contactName: {\r\n    marginBottom: 0,\r\n    fontWeight: 600,\r\n  },\r\n  [`@media (max-width:400px)`]: {\r\n    avatarNameContainer: {\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n    },\r\n    contactName: {\r\n      fontSize: \"1.3rem\",\r\n    },\r\n  },\r\n}));\r\n","import { ActionTypes } from \"types\";\r\n\r\nconst ContactsReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SET_CONTACTS: {\r\n            return { ...state, contacts: action.payload }\r\n        }\r\n        case ActionTypes.ADD_CONTACT: {\r\n            return { ...state, contacts: [...state.contacts, action.payload] }\r\n        }\r\n        case ActionTypes.UPDATE_CONTACT_STATUS: {\r\n            let idx = state.contacts.indexOf(action.payload.contact)\r\n            state.contacts[idx].isOnline = action.payload.status\r\n\r\n            return { ...state }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default ContactsReducer","import React, { useReducer, useContext, createContext, useEffect } from \"react\";\r\nimport ContactsReducer from \"./contactsReducer\";\r\n\r\nimport UserServices from \"services/apiCalls/user.services\";\r\nimport Action, { ActionTypes } from 'types'\r\nimport { useUserStore } from \"context/user/userContext\";\r\n\r\nexport const ContactsStore = createContext();\r\nexport const ContactsDispatch = createContext();\r\n\r\nconst initialState = {\r\n    contacts: []\r\n}\r\nconst ContactsProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(ContactsReducer, initialState);\r\n    const { isAuthenticated } = useUserStore()\r\n    useEffect(() => {\r\n        if (isAuthenticated)\r\n            UserServices.getUserContacts()\r\n                .then(response => dispatch(Action(ActionTypes.SET_CONTACTS, response.data.contacts)))\r\n                .catch(err => console.error(err))\r\n\r\n    }, [isAuthenticated])\r\n    return (\r\n        <ContactsStore.Provider value={state}>\r\n            <ContactsDispatch.Provider value={dispatch}>\r\n                {children}\r\n            </ContactsDispatch.Provider>\r\n        </ContactsStore.Provider>\r\n    );\r\n}\r\n\r\nexport const useContactsStore = () => useContext(ContactsStore)\r\nexport const useContactsDispatch = () => useContext(ContactsDispatch)\r\nexport default ContactsProvider\r\n","import React, { useEffect } from \"react\";\r\nimport { useStyles } from \"./style\";\r\nimport UserAvatar from \"../UserAvatar\";\r\nimport stringHash from 'string-hash'\r\nimport {\r\n  Typography,\r\n  ListItem,\r\n  ButtonBase,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\r\nimport { useUserStore } from \"context/user/userContext\";\r\nimport { useConversationsDispatch, useConversationsStore } from \"context/conversations/conversationsContext\";\r\nimport { useCurrentConversationDispatch, useCurrentConversationStore } from \"context/currentConversation/currentConversationContext\";\r\nimport Action, { ActionTypes } from \"types\";\r\nimport UserServices from \"services/apiCalls/user.services\";\r\nimport { useContactsDispatch } from \"context/contacts/contactsContext\";\r\nconst ContactItem = ({ contact, unknown, removeFromUknown }) => {\r\n  const classes = useStyles()\r\n  const { conversations } = useConversationsStore()\r\n  const { user, socket } = useUserStore()\r\n  const { name, isOnline } = contact\r\n  const contactsDispatch = useContactsDispatch()\r\n  const conversationsDispatch = useConversationsDispatch()\r\n  const currentConversation = useCurrentConversationStore()\r\n  const currentConversationDispatch = useCurrentConversationDispatch()\r\n  const conversationID = stringHash([user._id, contact._id].sort().join())\r\n\r\n  const handleContactItemClick = () => {\r\n    const conversationPayload = conversations.find(conversation =>\r\n      conversation.conversationID === conversationID &&\r\n      conversation.conversationTitle === null)\r\n    currentConversationDispatch(Action(ActionTypes.SET_CURRENT_CONVERSATION, conversationPayload))\r\n  }\r\n  const handleAddIconClick = () => {\r\n    UserServices.addContact(contact._id)\r\n      .then(response => {\r\n        contactsDispatch(Action(ActionTypes.ADD_CONTACT, response.data.newContact))\r\n        if (response.data.newConversation)\r\n          conversationsDispatch(Action(ActionTypes.ADD_CONVERSATION, response.data.newConversation))\r\n        removeFromUknown(contact)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const updateContactStatus = (status) => {\r\n      contactsDispatch(Action(ActionTypes.UPDATE_CONTACT_STATUS, { contact, status }))\r\n    }\r\n    socket.on(`${contact._id}-login`, ({ isOnline }) => { if (!unknown) updateContactStatus(isOnline) })\r\n    socket.on(`${contact._id}-logout`, ({ isOnline }) => { if (!unknown) updateContactStatus(isOnline) })\r\n    return () => {\r\n      socket.off(`${contact._id}-login`)\r\n      socket.off(`${contact._id}-logout `)\r\n    }\r\n  }, [socket, unknown, contact, contactsDispatch])\r\n  return (\r\n    <ListItem\r\n      className={classes.root}\r\n      selected={currentConversation.conversationID === conversationID && currentConversation.conversationTitle === null}\r\n    >\r\n      <ButtonBase className={classes.contactButton} disabled={unknown} onClick={handleContactItemClick}>\r\n        <UserAvatar isOnline={isOnline} />\r\n        <Typography variant='h6'>{name}</Typography>\r\n      </ButtonBase>\r\n      {unknown &&\r\n        <IconButton onClick={handleAddIconClick}>\r\n          <AddCircleRoundedIcon color='primary' />\r\n        </IconButton>\r\n      }\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default ContactItem\r\n\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    width: '90%',\r\n    margin: 'auto',\r\n    padding: theme.spacing(1, 2),\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n  searchBar: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  toggleButton: {\r\n    height: '90%',\r\n    padding: theme.spacing(0, 1),\r\n    margin: 'auto'\r\n  },\r\n  toggleButtonSelected: {\r\n    color: theme.palette.success.main\r\n  }\r\n}));\r\n","import React, { useState } from 'react'\r\nimport { IconButton, InputBase, } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport { useStyles } from './style'\r\nimport { Formik, Field, Form } from 'formik'\r\nimport UserServices from 'services/apiCalls/user.services';\r\nconst SearchContact = ({ contacts, updateContactList, updateUnknownList }) => {\r\n    const classes = useStyles()\r\n    const searchValues = { searchQuery: '' }\r\n    const [isGlobal, setIsGlobal] = useState(true)\r\n    let timeout\r\n    const handleSearchSubmit = (searchQuery) => {\r\n\r\n        if (isGlobal) {\r\n            UserServices.searchUsersByEmailOrName(searchQuery.toLowerCase())\r\n                .then((response) => updateUnknownList(response.data.users))\r\n                .catch(err => console.log(err))\r\n        }\r\n\r\n        else {\r\n            let newContactList = contacts.filter(contact =>\r\n                contact.name.toLowerCase().startsWith(searchQuery.toLowerCase()) ||\r\n                contact.email.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n            )\r\n            updateContactList(newContactList)\r\n        }\r\n    }\r\n    const handleSearchChange = (text, setFieldValue) => {\r\n        setFieldValue('searchQuery', text)\r\n        if (timeout) clearTimeout(timeout)\r\n        if (text.length >= 3)\r\n            timeout = setTimeout(() => handleSearchSubmit(text), 700)\r\n        if (text === '') {\r\n            updateContactList(contacts)\r\n            updateUnknownList([])\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <IconButton onClick={() => setIsGlobal(!isGlobal)}>\r\n                <PublicIcon color={isGlobal ? 'primary' : 'disabled'} />\r\n            </IconButton>\r\n\r\n            <Formik\r\n                initialValues={searchValues}\r\n                onSubmit={handleSearchSubmit}\r\n            >\r\n                {({ values, setFieldValue }) => (\r\n                    <Form className={classes.searchBar}>\r\n                        <Field\r\n                            className={classes.seachTextField}\r\n                            name='searchQuery'\r\n                            type='text'\r\n                            placeholder='Search Contact'\r\n                            as={InputBase}\r\n                            onChange={(e) => handleSearchChange(e.target.value, setFieldValue, values)}\r\n                            endAdornment={<SearchIcon color='disabled' />}\r\n                        />\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\nexport default SearchContact","import React, { useEffect, useState } from \"react\";\r\nimport { useStyles } from \"./style\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport ContactItem from \"../../components/ContactItem\";\r\nimport { useContactsStore } from 'context/contacts/contactsContext'\r\nimport SearchContact from \"components/SearchContact\";\r\n\r\n\r\n\r\nconst ContactsList = () => {\r\n  const classes = useStyles()\r\n  const { contacts } = useContactsStore()\r\n  const [displayContacts, setDisplayContacts] = useState(contacts)\r\n  const [unknownContacts, setUnknownContacts] = useState([])\r\n  const removeContactFromList = (contact) => {\r\n    setUnknownContacts(prevState => {\r\n      let newState= prevState\r\n      newState.splice(prevState.indexOf(contact))\r\n      return newState\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    console.log(unknownContacts)\r\n  }, [unknownContacts])\r\n  useEffect(() => {\r\n    setDisplayContacts(contacts)\r\n  }, [contacts])\r\n  return (\r\n    <div className={classes.root} >\r\n      <SearchContact contacts={contacts} updateContactList={setDisplayContacts} updateUnknownList={setUnknownContacts} />\r\n      {unknownContacts.map((contact, i) =>\r\n        <ContactItem key={i} contact={contact} unknown removeFromUknown={removeContactFromList} />\r\n      )}\r\n      <Divider variant='middle' />\r\n      {displayContacts.map((contact, i) =>\r\n        <ContactItem key={i} contact={contact} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import React, { useState } from \"react\";\r\nimport { useStyles } from \"./style\";\r\nimport {\r\n  AppBar,\r\n  Tabs,\r\n  Tab,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport ChatList from \"../ChatList\";\r\nimport ContactsList from \"containers/ContactsList\";\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst SidebarInfo = () => {\r\n  const classes = useStyles();\r\n  const [tabNumber, setTabNumber] = useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setTabNumber(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{\r\n          color: \"black\",\r\n          maxWidth: \"100%\",\r\n          backgroundColor: \"#f5f7fb\",\r\n          boxShadow: \"none\",\r\n        }}\r\n      >\r\n        <Tabs\r\n          value={tabNumber}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n          variant=\"fullWidth\"\r\n        >\r\n          <Tab\r\n            label=\"Chats\"\r\n            {...a11yProps(0)}\r\n            style={{\r\n              minWidth: \"50%\",\r\n              outline: \"none\",\r\n            }}\r\n          />\r\n          <Tab\r\n            label=\"Contacts\"\r\n            {...a11yProps(1)}\r\n            style={{ minWidth: \"50%\", outline: \"none\" }}\r\n          />\r\n\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      <TabPanel value={tabNumber} index={0} className={classes.tabPanel}>\r\n        <ChatList />\r\n      </TabPanel>\r\n      <TabPanel value={tabNumber} index={1} className={classes.tabPanel}>\r\n        <ContactsList />\r\n      </TabPanel>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarInfo;\r\n","import React from \"react\";\r\nimport { useStyles } from \"./style\";\r\nimport SidebarHeader from \"../SidebarHeader\";\r\nimport SidebarInfo from \"../SidebarInfo\";\r\n\r\nconst Sidebar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <SidebarHeader />\r\n      <SidebarInfo />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: ({ isMyMessage }) => isMyMessage ? 'flex-end' : 'flex-start'\r\n  },\r\n  messageContianer: {\r\n    minWidth: '12ch',\r\n  },\r\n  messageBox: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    borderBottomRightRadius: ({ isMyMessage }) => isMyMessage && 0,\r\n    borderTopLeftRadius: ({ isMyMessage }) => !isMyMessage && 0,\r\n    color: ({ isMyMessage }) => isMyMessage ? 'black' : 'white',\r\n    background: ({ isMyMessage }) => isMyMessage ? 'lightgrey' : 'linear-gradient(130deg, rgba(39,31,208,1) 0%, rgba(32,167,253,1) 75%, rgba(106,194,255,1) 100%)'\r\n  },\r\n  messageDetails: {\r\n    display: 'flex',\r\n    justifyContent: ({ isMyMessage }) => isMyMessage ? 'end' : 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  \r\n  imageIcon:{\r\n    width: '15%',\r\n    borderRadius: theme.spacing(2),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  image: {\r\n    borderRadius: 10,\r\n    display: \"block\",\r\n    objectFit: \"contain\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    outline: \"none\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { useStyles } from \"./style\";\r\nimport { Typography  } from \"@material-ui/core\";\r\nimport ISO6391 from 'iso-639-1';\r\nimport { useLanguageContext, getMessageTextVersion } from \"context/language/languageContext\";\r\nimport { useUserStore } from \"context/user/userContext\";\r\n\r\n\r\nimport { dateToString } from 'utils/dateUtils'\r\nimport UserAvatar from \"components/UserAvatar\";\r\nconst MessageItem = (props) => {\r\n  const { sender, createdAt, textVersions, isMyMessage } = props\r\n  const { user } = useUserStore()\r\n  const { isOriginalLanguage } = useLanguageContext()\r\n  const classes = useStyles(props)\r\n\r\n  if (sender)\r\n    return (\r\n      <div className={classes.root}>\r\n        {!isMyMessage &&  <UserAvatar />}\r\n        <div className={classes.messageContianer}>\r\n\r\n          <div className={classes.messageDetails}>\r\n            {!isMyMessage && \r\n              <Typography variant='body2'>\r\n\r\n                <img\r\n                  className={classes.imageIcon}\r\n                  alt={sender.language}\r\n                  src={`https://unpkg.com/language-icons/icons/${ISO6391.getCode(sender.language)}.svg`}\r\n                />\r\n                {sender.name}\r\n              </Typography>\r\n\r\n            }\r\n            <Typography variant='caption'>{dateToString(createdAt)}</Typography>\r\n          </div>\r\n          <div className={classes.messageBox}>\r\n            {getMessageTextVersion({ textVersions }, isOriginalLanguage, user.language)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  else return null;\r\n};\r\nexport default MessageItem;\r\n","import moment from 'moment'\r\nconst dateToString = (date) => {\r\n    let output = moment(date)\r\n    return output.format('HH:mm')\r\n}\r\n\r\nexport { dateToString }","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        padding: 10,\r\n    },\r\n    textField: {\r\n        width: '100%',\r\n    }\r\n}));\r\n","import React, { useState } from \"react\";\r\nimport Picker from 'emoji-picker-react';\r\nimport { ButtonBase, Menu } from \"@material-ui/core\";\r\nimport SentimentSatisfiedOutlinedIcon from \"@material-ui/icons/SentimentSatisfiedOutlined\";\r\nconst EmojiButton = ({ value, onSelect }) => {\r\n  const [anchorEmojisMenu, setAnchorEmojisMenu] = useState(null)\r\n  const handleEmojiPick = (_, emojiObject) => {\r\n    onSelect('message', value + emojiObject.emoji)\r\n  }\r\n  const handleEmojiButtonClick = (event) => {\r\n    setAnchorEmojisMenu(event.currentTarget)\r\n  }\r\n  const handleEmojisClose = () => {\r\n    setAnchorEmojisMenu(null)\r\n  }\r\n  return (\r\n    <div>\r\n      <ButtonBase\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleEmojiButtonClick}\r\n      >\r\n        <SentimentSatisfiedOutlinedIcon />\r\n      </ButtonBase>\r\n      <Menu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEmojisMenu}\r\n        open={Boolean(anchorEmojisMenu)}\r\n        onClose={handleEmojisClose}\r\n      >\r\n        <div>\r\n          <Picker\r\n            onEmojiClick={handleEmojiPick}\r\n            groupNames={{ smileys_people: \"PEOPLE\" }}\r\n            native\r\n          />\r\n        </div>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\nexport default EmojiButton;\r\n","import axios from \"axios\";\r\nimport ISO6391 from 'iso-639-1';\r\nexport const translateText = async (text, language) => {\r\n  try {\r\n    const languageCode = ISO6391.getCode(language)\r\n    console.log(languageCode)\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_TRANSLATE_URL}/v2?target=${languageCode}&key=${process.env.REACT_APP_API_KEY}&q=${text}`\r\n    );\r\n\r\n    return res.data.data.translations[0].translatedText;\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n};\r\n","import { translateText } from \"context/messages/helper\"\r\nimport unescape from 'unescape'\r\nconst generateMessageVersions = async (users, currentUser, message) => {\r\n    const textVersions = {}\r\n    textVersions[currentUser.language] = message\r\n    for (let conversationUser of users) {\r\n        if (currentUser.language !== conversationUser.language) {\r\n            let newVersion = await translateText(message, conversationUser.language)\r\n\r\n            textVersions[conversationUser.language] = unescape(newVersion)\r\n\r\n        }\r\n    }\r\n    return textVersions\r\n}\r\n\r\nexport { generateMessageVersions }","import { InputAdornment, TextField } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Formik, Field, Form } from 'formik'\r\nimport { useStyles } from './styles'\r\nimport EmojiButton from 'components/EmojiButton'\r\nimport ConversationServices from 'services/apiCalls/conversation.services'\r\nimport { useUserStore } from 'context/user/userContext'\r\nimport { useCurrentConversationStore } from 'context/currentConversation/currentConversationContext'\r\nimport { generateMessageVersions } from './helper'\r\n\r\n\r\nconst MessageInput = () => {\r\n    const classes = useStyles()\r\n    const { user, socket } = useUserStore()\r\n    const currentConversation = useCurrentConversationStore()\r\n    const inputValues = {\r\n        message: '',\r\n        image: undefined\r\n    }\r\n    const handleMessageSubmit = async ({ message, image }, { resetForm }) => {\r\n        if (currentConversation._id) {\r\n            const messageData = {\r\n                textVersions: {}\r\n            }\r\n            if (message !== '')\r\n                messageData.textVersions = await generateMessageVersions(currentConversation.users, user, message)\r\n            if (image)\r\n                messageData.image = image\r\n            ConversationServices.sendMessage(currentConversation._id, messageData)\r\n                .then((res) => {\r\n                    //currentConversationDispatch(Action(ActionTypes.PUSH_MESSAGE, res.data.messageObject))\r\n                    socket.emit('new-message', {\r\n                        ...res.data.messageObject,\r\n                        conversationID: currentConversation._id\r\n                    })\r\n                    resetForm()\r\n                })\r\n                .catch((res) => console.log(res))\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <Formik\r\n                initialValues={inputValues}\r\n                onSubmit={handleMessageSubmit}\r\n            >\r\n                {({ values, setFieldValue }) =>\r\n                    <Form>\r\n                        <Field\r\n                            className={classes.textField}\r\n                            name='message'\r\n                            type='text'\r\n                            placeholder='Send message...'\r\n                            variant='outlined'\r\n                            InputProps={{\r\n                                endAdornment:\r\n                                    <InputAdornment>\r\n                                        <EmojiButton value={values.message} onSelect={setFieldValue} />\r\n                                    </InputAdornment>,\r\n                            }}\r\n                            as={TextField}\r\n                        />\r\n                    </Form>\r\n                }\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\nexport default MessageInput","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxHeight: '100%',\r\n        height: '100%',\r\n        width: '65%'\r\n    },\r\n    messagesContainer: {\r\n        minHeight: '80%',\r\n        maxHeight: '80%',\r\n        overflowY: 'scroll',\r\n        scrollbarWidth: 'none',\r\n        '&::-webkit-scrollbar': {\r\n            display: 'none'\r\n        }\r\n    }\r\n}));\r\n","import { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    minHeight: \"10%\",\r\n    backgroundColor: \"#fff\",\r\n    boxShadow: \" 0 15px 15px #f5f7fb\",\r\n  },\r\n  leftRightSideStyle: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n  },\r\n  onOfflineStyle: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: 50,\r\n  },\r\n  typography: {\r\n    fontSize: \"0.9rem\",\r\n    fontWeight: 600,\r\n    color: \"#3A8DFF\",\r\n  },\r\n  [`@media (max-width:510px)`]: {\r\n    root: {\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      padding: 10,\r\n    },\r\n    leftRightSideStyle: {\r\n      padding: 0,\r\n    },\r\n    typography: {\r\n      fontSize: \"1.3rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport const StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    width: theme.spacing(1.1),\r\n    height: theme.spacing(1.1),\r\n    borderRadius: \"50%\",\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"$ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n","import React from \"react\";\r\nimport { Typography, Switch, ButtonBase } from \"@material-ui/core\";\r\nimport { useStyles } from \"./style\";\r\nimport { MoreHoriz } from \"@material-ui/icons\";\r\nimport { useLanguageContext } from \"context/language/languageContext\";\r\n\r\n\r\nconst ChatHeader = () => {\r\n\r\n  const classes = useStyles();\r\n  const { isOriginalLanguage, toggleOrginalLanguage } = useLanguageContext()\r\n  const handleChange = () => {\r\n    toggleOrginalLanguage()\r\n    console.log(isOriginalLanguage)\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.leftRightSideStyle}>\r\n        {isOriginalLanguage ? (\r\n          <Typography variant=\"body2\" className={classes.typography}>\r\n            Original language\r\n          </Typography>\r\n        ) : (\r\n          <Typography\r\n            variant=\"body2\"\r\n            className={classes.typography}\r\n            style={{\r\n              color: 'grey',\r\n              opacity: 0.5,\r\n            }}\r\n          >\r\n            Original language\r\n          </Typography>\r\n        )}\r\n        <Switch\r\n          checked={isOriginalLanguage}\r\n          onChange={handleChange}\r\n          color=\"primary\"\r\n          name=\"checked\"\r\n          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n        />\r\n        <ButtonBase\r\n          onClick={() => console.log(\"Clicked\")}\r\n          style={{ marginLeft: 20 }}\r\n        >\r\n          <MoreHoriz />\r\n        </ButtonBase>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatHeader;\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useCurrentConversationDispatch, useCurrentConversationStore } from 'context/currentConversation/currentConversationContext'\r\nimport MessageItem from 'components/MessageItem'\r\nimport MessageInput from 'components/MessageInput'\r\nimport Action, { ActionTypes } from 'types'\r\nimport { useStyles } from './styles'\r\nimport { useUserStore } from 'context/user/userContext'\r\nimport ChatHeader from 'containers/ChatHeader'\r\nconst ChatView = () => {\r\n    const { user, socket } = useUserStore()\r\n    const { _id, messages, users } = useCurrentConversationStore()\r\n    const currentConversationDispatch = useCurrentConversationDispatch()\r\n    const classes = useStyles()\r\n    const bottomDivRef = useRef()\r\n    const scrollToBottom = () => bottomDivRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    const getSenderData = (sender) => {\r\n        return users.find(user => user._id === sender)\r\n    }\r\n    useEffect(scrollToBottom, [messages])\r\n    useEffect(() => {\r\n        socket.on(`${_id}-message`, messageData => {\r\n            console.log('Message Pushed', _id)\r\n            currentConversationDispatch(Action(ActionTypes.PUSH_MESSAGE, messageData))\r\n        })\r\n        return () => socket.off(`${_id}-message`)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [_id])\r\n    const messagesMap = () => {\r\n        const output = messages.map(({ sender, ...rest }, idx) => {\r\n            return <MessageItem\r\n                key={idx}\r\n                sender={getSenderData(sender)}\r\n                {...rest}\r\n                isMyMessage={sender === user._id}\r\n            />\r\n        })\r\n        return output\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <ChatHeader />\r\n            <div className={classes.messagesContainer}>\r\n                {messagesMap()}\r\n                <div ref={bottomDivRef} />\r\n            </div>\r\n            <MessageInput />\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ChatView","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        padding: 0,\r\n        height: '100vh',\r\n        overflow: 'hidden'\r\n    },\r\n    item: {\r\n        maxHeight: '100%'\r\n    }\r\n}));\r\n","import Sidebar from 'containers/Sidebar'\r\nimport React from 'react'\r\nimport CurrentConversationProvider from 'context/currentConversation/currentConversationContext'\r\nimport ChatView from 'containers/ChatView'\r\nimport { useStyles } from './styles'\r\nconst Home = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <CurrentConversationProvider>\r\n            <div className={classes.root}>\r\n                <Sidebar />\r\n                <ChatView />\r\n            </div>\r\n        </CurrentConversationProvider>\r\n    )\r\n}\r\nexport default Home","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { theme } from \"./themes/theme\";\r\n//import { useUserDispatch, fetchUserData } from \"./context/user/userContext\"\r\nimport {\r\n  ThemeProvider,\r\n  Container,\r\n  CssBaseline,\r\n} from \"@material-ui/core\";\r\nimport \"./App.css\";\r\n\r\n//import socket from \"./socket-client/socket\";\r\nimport PrivateRoute from './hocs/privateRoute'\r\nimport UnPrivateRoute from './hocs/unPrivateRoute'\r\nimport LandingPage from \"./containers/LandingPage\"\r\nimport Home from 'containers/Home'\r\n\r\n\r\n\r\nconst dotenv = require(\"dotenv\");\r\ndotenv.config();\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Router>\r\n        <Container maxWidth=\"lg\" style={{ margin: \"auto\" }}>\r\n          <Switch>\r\n            <UnPrivateRoute exact path=\"/\" component={LandingPage} />\r\n            <PrivateRoute path=\"/home\" component={Home} />\r\n          </Switch>\r\n        </Container>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { UserProvider } from \"context/user/userContext\";\r\nimport ConversationsProvider from 'context/conversations/conversationsContext'\r\nimport LanguageProvider from 'context/language/languageContext'\r\nimport ContactsProvider from \"context/contacts/contactsContext\";\r\n\r\nReactDOM.render(\r\n  <UserProvider>\r\n    <ConversationsProvider>\r\n      <ContactsProvider>\r\n        <LanguageProvider>\r\n          <App />\r\n        </LanguageProvider>\r\n      </ContactsProvider>\r\n    </ConversationsProvider>\r\n  </UserProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}