{"version":3,"sources":["components/UserAvatar/avatar.png","containers/MainPage/style.js","containers/Sidebar/style.js","containers/SidebarNavBar/style.js","components/UserAvatar/style.js","components/UserAvatar/index.js","lib/fbConfig.js","services/getResizedImageUrl.js","services/uploadDeleteUserImage.js","containers/SidebarNavBar/index.js","containers/SidebarInfo/style.js","containers/ChatList/style.js","components/ChatItem/style.js","context/SelectConversation.js","context/ToggleLanguage.js","components/ChatItem/index.js","containers/ChatList/index.js","containers/InvitationDialog/index.jsx","containers/ContactsList/style.js","components/ContactItem/style.js","components/ContactItem/index.js","components/CreateGroupChat/index.js","containers/ContactsList/index.js","containers/InvitationsList/style.js","components/InvitationItem/style.js","hooks/useWindowDimensions.js","components/InvitationItem/index.js","containers/InvitationsList/index.js","containers/SidebarInfo/index.js","containers/Sidebar/index.js","containers/MainContentField/style.js","containers/MainContentFieldNavBar/style.js","containers/MainContentFieldNavBar/index.js","containers/MessageField/style.js","components/MessageItem/style.js","components/MessageItem/index.jsx","components/PictureModal/style.js","components/PictureModal/index.js","context/messages/helper.js","containers/MessageField/helper.js","components/ImageInputView/index.js","components/EmojiButton/style.js","components/EmojiButton/index.js","components/AddPhotoButton/index.js","containers/MessageField/index.js","containers/MainContentField/index.js","containers/MainPage/index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","justifyContent","alignItems","height","padding","spacing","flexDirection","paddingTop","width","minWidth","backgroundColor","minHeight","leftRightSideStyle","badge","top","right","typography","fontWeight","textAlign","logoutStyle","color","textDecoration","fontSize","OfflineBadge","withStyles","boxShadow","palette","background","paper","borderRadius","Badge","OnlineBadge","position","left","animation","border","content","transform","opacity","margin","marginRight","avatar","memo","imageUrl","isOnline","classes","userPicture","undefined","url","includes","className","overlap","anchororigin","vertical","horizontal","variant","Avatar","alt","data-testid","src","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","keepTrying","triesRemaining","storageRef","Promise","reject","getDownloadURL","then","catch","error","code","t","resolve","setTimeout","bind","v","err","console","log","message","cryptoRandomString","require","ref","replaceUserImage","newImageData","oldImageData","userEmail","a","axios","put","name","desertRef","child","delete","Error","uploadUserImage","newImage","addedImageUrl","resizedImageName","randomString","length","Object","defineProperties","value","writable","fileRef","resizedImageNameArray","split","splice","join","resizedImageStorageRef","resizedImageUrl","deleteUserImage","imageName","SidebarNavBar","useState","open","setOpen","anchorEl","setAnchorEl","userData","setUserData","user","useUserState","dispatch","useUserDispatch","contactsDispatch","useContactsDispatch","conversationsDispatch","useConversationsDispatch","localStorage","getItem","useEffect","handleClose","handleSave","files","pictureURL","email","fetchUserData","Typography","Tooltip","title","placement","arrow","ButtonBase","aria-controls","aria-haspopup","onClick","event","currentTarget","style","marginLeft","MoreHoriz","Menu","id","keepMounted","Boolean","onClose","MenuItem","removeItem","resetContactsInvitationsLists","resetConversations","socket","emit","off","to","onSave","showPreviews","maxFileSize","flexGrow","overflow","tabs","borderColor","tabPanel","search","shape","marginTop","marginBottom","breakpoints","up","searchIcon","pointerEvents","clearIcon","debounceInput","outline","collapse","alert","maxHeight","avatarNameContainer","nameContainer","alignContent","chip","createContext","props","useContactsState","contacts","unknownUsers","conversation","index","select","selected","lastMessage","usersData","users","filter","cUser","ToggleLanguageContext","useContext","ToggleLanguage","context","SelectConversation","chatTitle","setChatTitle","setMessage","original","keys","language","fetch","forEach","addUknownUser","fetchContactsAndInvitations","reduce","arr","push","ListItem","button","setConversation","conversationID","pictureUrl","gutterBottom","ChatList","React","selectedIndex","setSelectedIndex","conversations","useConversationsState","handleListItemClick","List","map","messageCount","key","textVersions","InvitationDialog","isAlertOpen","alertError","handleSendEmail","userId","setCopied","copied","onCopy","setEmail","linkToCopy","Dialog","fullWidth","aria-labelledby","DialogContent","DialogTitle","DialogContentText","mx","TextField","autoFocus","label","type","onChange","e","target","disabled","InputProps","endAdornment","InputAdornment","text","Button","DialogActions","Collapse","in","Alert","severity","icon","inviteFriendsContainer","paddingLeft","paddingBottom","buttonBase","contactName","handleDeleteContactButton","contact","CreateGroupChat","contactsList","checkedBoxes","setCheckedBoxes","handleChange","checked","prevState","FormGroup","i","FormControlLabel","control","Checkbox","entries","emails","prop","Axios","post","msg","fetchConversations","response","data","ContactsList","inviteDialog","showInviteDialog","setIsAlertOpen","setAlertError","closeInviteDialog","userEmailFromLocalStorage","deleteContact","openGroupChatForm","setOpenGroupChatForm","alertSuccess","isEmailValid","isEmail","get","status","getWindowDimensions","window","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","handleApproveContact","handleRejectContact","Box","component","size","InvitationsList","invitationsList","setInvitationsList","invitations","emailToApprove","approveContact","emailToReject","rejectContact","invitation","TabPanel","children","other","role","hidden","a11yProps","SidebarInfo","tabNumber","setTabNumber","query","setQuery","isOpen","setIsOpen","setUsersData","handleSearch","findContacts","res","AppBar","maxWidth","Tabs","newValue","aria-label","orientation","Tab","debounceTimeout","minLength","Sidebar","onOfflineStyle","StyledBadge","MainContentFieldNavBar","setChecked","toggleLanguageContext","Switch","setOriginal","inputProps","messegesView","messageInput","messageView","messageInfo","messageDetails","messageText","borderBottomRightRadius","borderTopLeftRadius","image","objectFit","sender","date","myMessage","handleModalOpen","dateString","Date","toLocaleTimeString","hour","minute","defaultAvatar","ISO6391","getCode","modal","PictureModal","handleModalClose","Modal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","translateText","translations","translatedText","addTextVersion","newMsg","createMessageObject","languages","promises","all","ImageInputView","StyledMenu","elevation","getContentAnchorEl","anchorOrigin","transformOrigin","EmojiButton","set","onSelect","emoji","concat","native","emojiSize","AddPhotoButton","handleImageSelector","imageEl","handleImageSave","currentTime","senderData","dispatchConv","messages","setMessages","setLanguages","messagesEndRef","useRef","setUsers","setImageEl","setImageUrl","modalOpen","setModalOpen","largeScreenPicture","setLargeScreenPicture","imageData","handleCloseSmallImage","saveMessage","sendMessage","preventDefault","toISOString","scrollToBottom","current","scrollIntoView","behavior","room","on","updateContacts","loadMessages","contactsContext","placeholder","onKeyPress","handleSendMessage","autoComplete","startAdornment","MainContentField","MainPage","Provider"],"mappings":"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","file":"static/js/6.b1aab95c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.f1bf8dfd.png\";","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    padding: theme.spacing(1),\n    [`@media (max-width:820px)`]: {\n      flexDirection: \"column\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n  },\n}));\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: theme.spacing(2.5),\n    paddingTop: 0,\n    width: \"35%\",\n    minWidth: 410,\n    height: \"100%\",\n    backgroundColor: \"#f5f7fb\",\n    [`@media (max-width:820px)`]: {\n      width: \"100%\",\n      minWidth: 0,\n    },\n  },\n}));\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    minHeight: \"10vh\",\n    backgroundColor: \"transparent\",\n  },\n  leftRightSideStyle: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: theme.spacing(2),\n  },\n  badge: { top: 63, right: 5 },\n  typography: {\n    fontWeight: 600,\n    textAlign: \"center\",\n  },\n  logoutStyle: {\n    color: \"black\",\n    textDecoration: \"none\",\n  },\n  [`@media (max-width:400px)`]: {\n    root: {\n      padding: theme.spacing(2),\n    },\n    leftRightSideStyle: {\n      flexDirection: \"column\",\n      height: \"10vh\",\n      padding: 0,\n    },\n    typography: {\n      fontSize: \"1.3rem\",\n    },\n  },\n}));\n","import Badge from \"@material-ui/core/Badge\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nexport const OfflineBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: \"#D3D3D3\",\n    color: \"#44b700\",\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    width: theme.spacing(1.4),\n    height: theme.spacing(1.4),\n    borderRadius: \"50%\",\n    top: theme.spacing(5),\n    right: theme.spacing(0.5),\n  },\n}))(Badge);\n\nexport const OnlineBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: \"#44b700\",\n    color: \"#44b700\",\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    width: theme.spacing(1.1),\n    height: theme.spacing(1.1),\n    borderRadius: \"50%\",\n    top: theme.spacing(5),\n    right: theme.spacing(0.5),\n    \"&::after\": {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: \"50%\",\n      animation: \"$ripple 1.2s infinite ease-in-out\",\n      border: \"1px solid currentColor\",\n      content: '\"\"',\n    },\n  },\n  \"@keyframes ripple\": {\n    \"0%\": {\n      transform: \"scale(.8)\",\n      opacity: 1,\n    },\n    \"100%\": {\n      transform: \"scale(2.4)\",\n      opacity: 0,\n    },\n  },\n}))(Badge);\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n      marginRight: theme.spacing(3),\n    },\n  },\n  avatar: {\n    width: theme.spacing(6.5),\n    height: theme.spacing(6.5),\n  },\n  [`@media (max-width:400px)`]: {\n    root: {\n      \"& > *\": {\n        marginRight: theme.spacing(1),\n      },\n      // marginTop: 50,\n    },\n  },\n}));\n","import React, { memo } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport PropTypes from \"prop-types\";\nimport avatar from \"./avatar.png\";\nimport { useStyles, OfflineBadge, OnlineBadge } from \"./style\";\n\nconst UserAvatar = ({ imageUrl, isOnline }) => {\n  const classes = useStyles();\n  let userPicture = \"\";\n\n  if (\n    imageUrl !== undefined &&\n    imageUrl.url !== undefined &&\n    imageUrl.url.includes(\"http\")\n  ) {\n    userPicture = imageUrl.url;\n  } else {\n    userPicture = avatar;\n  }\n\n  return (\n    <div className={classes.root}>\n      {isOnline ? (\n        <OnlineBadge\n          overlap=\"circle\"\n          anchororigin={{\n            vertical: \"bottom\",\n            horizontal: \"right\",\n          }}\n          variant=\"dot\"\n        >\n          <Avatar\n            variant=\"circle\"\n            alt=\"Online Badge\"\n            data-testid='online'\n            src={userPicture}\n            className={classes.avatar}\n          />\n        </OnlineBadge>\n      ) : (\n        <OfflineBadge\n          overlap=\"circle\"\n          anchororigin={{\n            vertical: \"bottom\",\n            horizontal: \"right\",\n          }}\n          variant=\"dot\"\n        >\n          <Avatar\n            variant=\"circle\"\n            alt=\"Offline Badge\"\n            data-testid='offline'\n            src={userPicture}\n            className={classes.avatar}\n          />\n        </OfflineBadge>\n      )}\n    </div>\n  );\n};\n\nexport default memo(UserAvatar);\n\nUserAvatar.propTypes = {\n  imageUrl: PropTypes.oneOfType([\n    PropTypes.shape({\n      url: PropTypes.string,\n      name: PropTypes.string,\n    }),\n    PropTypes.bool,\n  ]),\n  isOnline: PropTypes.bool,\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\n\n// Your web app's Firebase configuration\nlet firebaseConfig = {\n  apiKey: process.env.REACT_APP_FB_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};;\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.storage();\n\nexport default firebase;\n","function delay(t, v) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve.bind(null, v), t);\n  });\n}\n\nexport function keepTrying(triesRemaining, storageRef) {\n  if (triesRemaining < 0) {\n    return Promise.reject(\"out of tries\");\n  }\n\n  return storageRef\n    .getDownloadURL()\n    .then((url) => {\n      return url;\n    })\n    .catch((error) => {\n      switch (error.code) {\n        case \"storage/object-not-found\":\n          return delay(2000)\n            .then(() => {\n              return keepTrying(triesRemaining - 1, storageRef);\n            })\n            .catch((err) => console.log(\"Error caught \", err.message));\n        default:\n          console.log(error);\n          return Promise.reject(error);\n      }\n    });\n}\n","import axios from \"axios\";\nimport firebase from \"../lib/fbConfig\";\nimport { keepTrying } from \"./getResizedImageUrl\";\nconst cryptoRandomString = require(\"crypto-random-string\");\n\nlet storageRef = firebase.storage().ref();\n\nconst replaceUserImage = async (newImageData, oldImageData, userEmail) => {\n  let desertRef;\n  try {\n    if (oldImageData !== null) {\n      await axios.put(`user/${userEmail}/image`, {\n        newImageData: { ...newImageData },\n      });\n    }\n\n    if (\n      oldImageData !== null &&\n      oldImageData !== undefined &&\n      !!oldImageData.name\n    ) {\n      desertRef = storageRef.child(`photos/${oldImageData.name}`);\n      await desertRef.delete();\n    }\n  } catch (err) {\n    throw Error(\"Oops, something went wrong \", err.message);\n  }\n};\n\n//upload user image to Firebase Storage\nexport const uploadUserImage = async (newImage, oldImageData, userEmail) => {\n  let addedImageUrl = \"\";\n  let resizedImageName = \"\";\n  let fileRef;\n\n  const randomString = cryptoRandomString({ length: 10 });\n  // add random string to make user avatar unique\n  Object.defineProperties(newImage, {\n    name: {\n      value: randomString + newImage.name,\n      writable: true,\n    },\n  });\n\n  if (oldImageData === null) {\n    fileRef = storageRef.child(`user-images/${newImage.name}`);\n  } else {\n    fileRef = storageRef.child(`photos/${newImage.name}`);\n  }\n\n  await fileRef.put(newImage, { name: newImage.name });\n\n  const resizedImageNameArray = newImage.name.split(\".\");\n  resizedImageNameArray.splice(\n    resizedImageNameArray.length - 1,\n    0,\n    \"_200x200.\"\n  );\n  resizedImageName = resizedImageNameArray.join(\"\");\n  let resizedImageStorageRef;\n  if (oldImageData === null) {\n    resizedImageStorageRef = storageRef.child(\n      `user-images/${resizedImageName}`\n    );\n    const resizedImageUrl = await keepTrying(10, resizedImageStorageRef);\n\n    addedImageUrl = resizedImageUrl;\n  } else {\n    resizedImageStorageRef = storageRef.child(`photos/${resizedImageName}`);\n    const resizedImageUrl = await keepTrying(10, resizedImageStorageRef);\n\n    addedImageUrl = resizedImageUrl;\n  }\n\n  const newImageData = {\n    url: addedImageUrl,\n    name: resizedImageName,\n  };\n  await replaceUserImage(newImageData, oldImageData, userEmail);\n  return newImageData;\n};\n\nexport const deleteUserImage = async (imageName) => {\n  let fileRef = storageRef.child(`user-images/${imageName}`);\n  await fileRef.delete().catch(function (err) {\n    console.log(\"Oops, image failed to be deleted \", err.message);\n    new Error(err.message);\n  });\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Typography,\n  ButtonBase,\n  Menu,\n  MenuItem,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { useStyles } from \"./style\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport { MoreHoriz } from \"@material-ui/icons\";\nimport UserAvatar from \"../../components/UserAvatar/index\";\nimport { uploadUserImage } from \"../../services/uploadDeleteUserImage\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  useUserState,\n  useUserDispatch,\n  fetchUserData,\n} from \"../../context/user/userContext\";\nimport {\n  resetContactsInvitationsLists,\n  useContactsDispatch,\n} from \"../../context/contacts/contactsContext\";\nimport {\n  useConversationsDispatch,\n  resetConversations\n} from \"../../context/conversations/conversationsContext\";\nimport socket from \"../../socket-client/socket\";\n\nconst SidebarNavBar = () => {\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [userData, setUserData] = useState({});\n  const classes = useStyles();\n\n  const { user } = useUserState();\n  const dispatch = useUserDispatch();\n  const contactsDispatch = useContactsDispatch();\n  const conversationsDispatch = useConversationsDispatch();\n  const isOnline = localStorage.getItem(\"auth-token\");\n\n  useEffect(() => {\n    setUserData(user);\n  }, [user]);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSave = async (files) => {\n    setOpen(false);\n    setAnchorEl(null);\n    await uploadUserImage(files[0], userData.pictureURL, userData.email);\n    fetchUserData(dispatch);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"auth-token\");\n    setAnchorEl(null);\n    resetContactsInvitationsLists(contactsDispatch);\n    resetConversations(conversationsDispatch);\n    socket.emit(\"logout\", userData.email);\n    socket.off();\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.leftRightSideStyle}>\n        <UserAvatar isOnline={!!isOnline} imageUrl={userData.pictureURL} />\n        <Typography variant=\"body2\" className={classes.typography}>\n          {userData.name}\n        </Typography>\n      </div>\n      <div className={classes.leftRightSideStyle}>\n        <Tooltip title=\"More actions\" placement=\"bottom\" arrow>\n          <ButtonBase\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n            style={{ marginLeft: 20 }}\n          >\n            <MoreHoriz />\n          </ButtonBase>\n        </Tooltip>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={() => setOpen(true)}>Replace picture</MenuItem>\n          <MenuItem onClick={handleLogout}>\n            <NavLink to=\"/login\" className={classes.logoutStyle}>\n              Log out\n            </NavLink>\n          </MenuItem>\n        </Menu>\n        <DropzoneDialog\n          open={open}\n          onSave={handleSave}\n          showPreviews={true}\n          maxFileSize={1500000}\n          onClose={() => {\n            setOpen(false);\n            handleClose();\n          }}\n        />\n      </div>\n    </div>\n  );\n};\nexport default SidebarNavBar;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    flexGrow: 1,\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"transparent\",\n    overflow: \"hidden\",\n  },\n  tabs: {\n    backgroundColor: \"#f5f7fb\",\n    borderColor: \"none\",\n  },\n  tabPanel: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  search: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: \"#e9eef9\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    minWidth: \"100%\",\n    height: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  clearIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  debounceInput: {\n    border: \"none\",\n    height: \"100%\",\n    width: \"70%\",\n    backgroundColor: \"transparent\",\n    fontSize: \"1.3rem\",\n    right: 0,\n    outline: \"none\",\n  },\n  collapse: {\n    textAlign: \"center\",\n    marginBottom: theme.spacing(3),\n    width: \"100%\",\n  },\n  alert: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  [`@media (max-width:400px)`]: {\n    tabs: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  },\n}));\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 0,\n    maxHeight: \"65vh\",\n    flexGrow: 1,\n    overflow: \"auto\",\n    backgroundColor: \"transparent\",\n    \"-ms-overflow-style\": \"none\",\n    \"scrollbar-width\": \"none\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n  },\n}));\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    // justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    width: \"100%\",\n    borderRadius: theme.spacing(1),\n    backgroundColor: \"#f9fafc\",\n    boxShadow: \"0 0 1px 0 grey\",\n  },\n  avatarNameContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"75%\",\n    height: \"100%\",\n  },\n  nameContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignContent: \"center\",\n    justifyContent: \"center\",\n  },\n  chip: {\n    display: \"block\",\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  [`@media (max-width:360px)`]: {\n    avatarNameContainer: {\n      flexDirection: \"column\",\n      justifyContent:'center'\n    },\n  },\n}));\n","import { createContext } from 'react';\nexport default createContext();","import { createContext } from 'react';\nexport default createContext(null);","import React, { memo, useContext, useState, useEffect } from \"react\";\nimport { useStyles } from \"./style\";\nimport PropTypes from \"prop-types\";\nimport UserAvatar from \"../UserAvatar\";\nimport { Typography, ListItem } from \"@material-ui/core\";\nimport SelectConversation from \"../../context/SelectConversation\";\nimport { useUserState } from \"../../context/user/userContext\";\nimport {\n  useContactsState,\n  useContactsDispatch,\n  fetchContactsAndInvitations,\n  addUknownUser,\n} from \"../../context/contacts/contactsContext\";\nimport ToggleLanguage from \"../../context/ToggleLanguage\";\nconst ChatItem = (props) => {\n  const classes = useStyles();\n  const { user } = useUserState();\n  // const user = {};\n  const dispatch = useContactsDispatch();\n  const { contacts, unknownUsers } = useContactsState();\n  // const contacts = [];\n  // const unknownUsers = [];\n  const {\n    conversation,\n    index,\n    select,\n    selected,\n    lastMessage,\n    usersData,\n  } = props;\n  const users = conversation.users.filter((cUser) => cUser !== user.email);\n  const ToggleLanguageContext = useContext(ToggleLanguage);\n  const context = useContext(SelectConversation);\n  const [chatTitle, setChatTitle] = useState();\n  const [message, setMessage] = useState(\"\");\n\n  const onChatClick = (event) => {\n    select(event, index);\n    context.setConversation(conversation.conversationID);\n  };\n  useEffect(() => {\n    if (lastMessage)\n      setMessage(\n        lastMessage[\n          ToggleLanguageContext.original\n            ? Object.keys(lastMessage)[0]\n            : user.language\n        ]\n      );\n  }, [ToggleLanguageContext, lastMessage, user.language]);\n  useEffect(() => {\n    let fetch = false;\n    if (Object.keys(contacts).length) {\n      users.forEach((cUser) => {\n        if (!contacts[cUser] && cUser !== user.email && !unknownUsers[cUser]) {\n          addUknownUser(cUser, unknownUsers, dispatch);\n          fetch = true;\n        }\n      });\n    }\n    if (fetch) {\n      fetchContactsAndInvitations(user.email, dispatch);\n    }\n  }, [\n    conversation,\n    users,\n    dispatch,\n    contacts,\n    unknownUsers,\n    user.email,\n    fetchContactsAndInvitations,\n  ]);\n  useEffect(() => {\n    Object.keys(usersData).length &&\n      setChatTitle(\n        users\n          .reduce((arr, cUser) => {\n            if (usersData[cUser]) arr.push(usersData[cUser].name);\n            return arr;\n          }, [])\n          .join()\n      );\n  }, [usersData, users]);\n  return (\n    <ListItem\n      button\n      className={classes.root}\n      onClick={onChatClick}\n      selected={selected === index}\n    >\n      <div className={classes.avatarNameContainer}>\n        {users.length === 1 && (\n          <UserAvatar\n            imageUrl={\n              usersData[users[0]] !== undefined &&\n              usersData[users[0]].pictureUrl\n            }\n            isOnline={\n              usersData[users[0]] !== undefined && usersData[users[0]].isOnline\n            }\n          />\n        )}\n        <div className={classes.nameContainer}>\n          <Typography\n            variant=\"body1\"\n            style={{ marginBottom: 0, fontWeight: 600 }}\n            gutterBottom\n          >\n            {chatTitle}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            style={{ marginBottom: 0, fontWeight: 600, fontSize: \"0.8rem\" }}\n            gutterBottom\n          >\n            {message}\n          </Typography>\n        </div>\n      </div>\n\n      {/* <Chip\n        label={messageCount}\n        color=\"primary\"\n        size=\"small\"\n        className={classes.chip}\n      /> */}\n    </ListItem>\n  );\n};\n\nexport default memo(ChatItem);\n\nChatItem.propTypes = {\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  messageCount: PropTypes.number,\n  select: PropTypes.func,\n  index: PropTypes.number,\n  selected: PropTypes.number,\n};\n","import React from \"react\";\nimport { useStyles } from \"./style\";\nimport ChatItem from \"../../components/ChatItem\";\nimport Typography from \"@material-ui/core/Typography\"\nimport List from \"@material-ui/core/List\";\nimport {\n  useConversationsState\n} from \"../../context/conversations/conversationsContext\";\nconst ChatList = ({ usersData }) => {\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = React.useState(-1);\n  const { conversations } = useConversationsState();\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n  return (\n    <List className={classes.root}>\n      {conversations.length > 0 ?\n        conversations.map((conversation, index) => {\n          if ((conversation.messageCount > 0 || conversation.users.length > 2) && usersData)\n            return (\n              <ChatItem\n                key={index}\n                conversation={conversation}\n                index={index}\n                select={handleListItemClick}\n                selected={selectedIndex}\n                lastMessage={\n                  conversation.lastMessage ?\n                    conversation.lastMessage\n                      .textVersions\n                    : undefined}\n                usersData={usersData}\n\n              />\n            )\n            else return null\n        }) :\n        <Typography\n          variant=\"body1\"\n          color=\"primary\"\n          gutterBottom\n          style={{ color: \"black\", textAlign: \"center\" }}\n        >\n          No group chats\n      </Typography>}\n    </List>\n  );\n};\n\nexport default ChatList;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  TextField,\n  Button,\n  Typography,\n  InputAdornment,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Collapse,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nconst InvitationDialog = ({\n  open,\n  isAlertOpen,\n  alertError,\n  onClose,\n  handleSendEmail,\n  userId,\n  setCopied,\n  copied,\n  onCopy,\n}) => {\n  const [email, setEmail] = useState(\"\");\n\n  const linkToCopy = `localhost:3000/signup?referrer=${userId}`;\n\n  return (\n    <Dialog\n      fullWidth={true}\n      open={open}\n      onClose={() => {\n        onClose();\n        setCopied(false);\n      }}\n      aria-labelledby=\"invitation-dialog-title\"\n    >\n      <DialogContent\n        style={{\n          margin: \"10%\",\n        }}\n      >\n        <DialogTitle id=\"invitation-dialog-title\">\n          <Typography style={{ fontWeight: 600 }}>\n            Invite friends to messenger\n          </Typography>\n        </DialogTitle>\n        <DialogContentText mx=\"auto\">\n          Send your friends an invite email\n        </DialogContentText>\n        <TextField\n          autoFocus\n          id=\"emailToInvite\"\n          label=\"Email Address\"\n          type=\"email\"\n          variant=\"outlined\"\n          onChange={(e) => setEmail(e.target.value)}\n          fullWidth\n        />\n        <DialogContentText>Or share referral link</DialogContentText>\n        <TextField\n          disabled\n          id=\"linkToInvite\"\n          variant=\"outlined\"\n          value={linkToCopy}\n          fullWidth\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <CopyToClipboard text={linkToCopy} onCopy={() => onCopy()}>\n                  {copied ? (\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      style={{ backgroundColor: \"green\" }}\n                    >\n                      Copied\n                    </Button>\n                  ) : (\n                    <Button variant=\"contained\" color=\"primary\">\n                      Copy\n                    </Button>\n                  )}\n                </CopyToClipboard>\n              </InputAdornment>\n            ),\n          }}\n        />\n        <DialogActions>\n          <Button color=\"primary\" onClick={() => handleSendEmail(email)}>\n            Send Invite\n          </Button>\n        </DialogActions>\n        <Collapse in={isAlertOpen}>\n          {alertError ? (\n            <Alert severity=\"error\">{alertError}</Alert>\n          ) : (\n            <Alert\n              icon={<CheckIcon fontSize=\"inherit\" />}\n              severity=\"success\"\n              style={{ textAlign: \"center\", marginBottom: 20 }}\n            >\n              User invited\n            </Alert>\n          )}\n        </Collapse>\n      </DialogContent>\n    </Dialog>\n  );\n};\nexport default InvitationDialog;\n\nInvitationDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  isAlertOpen: PropTypes.bool,\n  alertError: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onClose: PropTypes.func.isRequired,\n  handleSendEmail: PropTypes.func.isRequired,\n  copied: PropTypes.bool.isRequired,\n  setCopied: PropTypes.func,\n  onCopy: PropTypes.func,\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 0,\n    maxHeight: \"63vh\",\n    flexGrow: 1,\n    overflow: \"auto\",\n    backgroundColor: \"transparent\",\n    \"-ms-overflow-style\": \"none\",\n    \"scrollbar-width\": \"none\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n  },\n  inviteFriendsContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    width: \"100%\",\n    backgroundColor: \"transparent\",\n  },\n  typography: {\n    marginBottom: 0,\n    marginLeft: 10,\n    fontWeight: 600,\n  },\n  [`@media (max-width:400px)`]: {\n    typography: {\n      fontSize: \"1.3rem\",\n    },\n  },\n}));\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(2),\n    paddingTop: 0,\n    paddingBottom: 0,\n    marginBottom: theme.spacing(1),\n    width: \"100%\",\n    borderRadius: theme.spacing(1),\n    backgroundColor: \"transparent\",\n  },\n  avatarNameContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"50%\",\n    height: \"100%\",\n  },\n  chip: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  buttonBase: {\n    marginLeft: 20,\n    marginRight: 20,\n    padding: 10,\n    borderRadius: \"50%\",\n  },\n  contactName: {\n    marginBottom: 0,\n    fontWeight: 600,\n  },\n  [`@media (max-width:400px)`]: {\n    avatarNameContainer: {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n    },\n    contactName: {\n      fontSize: \"1.3rem\",\n    },\n  },\n}));\n","import React, { memo, useState, useContext } from \"react\";\nimport { useStyles } from \"./style\";\nimport PropTypes from \"prop-types\";\nimport UserAvatar from \"../UserAvatar\";\nimport {\n  Typography,\n  ListItem,\n  ButtonBase,\n  Menu,\n  MenuItem,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { MoreHoriz } from \"@material-ui/icons\";\nimport SelectConversation from \"../../context/SelectConversation\";\nconst ContactItem = ({\n  pictureUrl,\n  name,\n  email,\n  index,\n  isOnline,\n  handleDeleteContactButton,\n  contact,\n  select,\n  selected,\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const context = useContext(SelectConversation);\n  const classes = useStyles();\n  const onContactClick = (event) => {\n    select(event, index)\n    context.setConversation(contact.conversationID)\n  }\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <ListItem\n      button\n      className={classes.root}\n      onClick={onContactClick}\n      selected={selected === index}\n    >\n      <div className={classes.avatarNameContainer}>\n        <UserAvatar imageUrl={pictureUrl} isOnline={isOnline} />\n        <Typography\n          variant=\"body1\"\n          className={classes.contactName}\n          gutterBottom\n        >\n          {name}\n        </Typography>\n      </div>\n      <Tooltip title=\"Delete contact\" placement=\"bottom\" arrow>\n        <ButtonBase\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n          className={classes.buttonBase}\n        >\n          <MoreHoriz />\n        </ButtonBase>\n      </Tooltip>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={() => handleDeleteContactButton(email)}>\n          Delete contact\n        </MenuItem>\n      </Menu>\n    </ListItem>\n  );\n};\n\nexport default memo(ContactItem);\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  imageUrl: PropTypes.string,\n  index: PropTypes.number.isRequired,\n  isOnline: PropTypes.bool,\n};\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Axios from \"axios\";\nimport { useUserState } from \"../../context/user/userContext\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport {\n  useConversationsDispatch,\n  fetchConversations,\n} from \"../../context/conversations/conversationsContext\";\nconst CreateGroupChat = ({ open, onClose, contactsList }) => {\n  const { user } = useUserState();\n  const [checkedBoxes, setCheckedBoxes] = useState({});\n  const dispatch = useConversationsDispatch();\n  const handleChange = (event) => {\n    setCheckedBoxes({\n      ...checkedBoxes,\n      [event.target.name]: event.target.checked,\n    });\n  };\n\n  const createConversation = () => {\n    let users = Object.entries(checkedBoxes).reduce((emails, [prop, val]) => {\n      if (val === true) {\n        setCheckedBoxes(prevState => ({ ...prevState, [prop]: false }))\n        emails.push(prop)\n      }\n      return emails;\n    }, [])\n    Axios.post(`/user/groupchat`, [...users, user.email])\n      .then((msg) => {\n        fetchConversations(user.email, dispatch);\n        onClose()\n      })\n      .catch((err) => {\n        if (err.response.data.code === 11000) {\n          alert(\"chat already exists\")\n          onClose();\n        }\n      })\n  }\n  useEffect(() => {\n    Object.keys(contactsList).forEach((contact) => {\n      setCheckedBoxes((prevState) => ({\n        ...prevState,\n        [contact]: false,\n      }));\n    });\n  }, [contactsList]);\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Create Group Chat</DialogTitle>\n      <DialogContent>\n        <FormGroup>\n          {!!Object.keys(contactsList).length &&\n            Object.keys(contactsList).map((contact, i) => (\n              <FormControlLabel\n                key={i}\n                control={\n                  <Checkbox\n                    checked={checkedBoxes[contact]}\n                    name={contact}\n                    color=\"primary\"\n                    onChange={handleChange}\n                  />\n                }\n                label={contact}\n              />\n            ))}\n        </FormGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"secondary\">\n          Cancel\n        </Button>\n        <Button onClick={createConversation} color=\"primary\">\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\nexport default CreateGroupChat;\n","import React, { useState } from \"react\";\nimport InvitationDialog from \"../InvitationDialog\";\nimport { useStyles } from \"./style\";\nimport { List, Typography, ButtonBase } from \"@material-ui/core\";\nimport ContactItem from \"../../components/ContactItem\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport {\n  useContactsDispatch,\n  useContactsState,\n  deleteContact,\n  userEmailFromLocalStorage,\n} from \"../../context/contacts/contactsContext\";\nimport { useUserState } from \"../../context/user/userContext\";\nimport axios from \"axios\";\nimport isEmail from \"validator/lib/isEmail\";\nimport CreateGroupChat from \"../../components/CreateGroupChat\";\n\nconst ContactsList = () => {\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [copied, setCopied] = useState(false);\n\n  const classes = useStyles();\n\n  const [inviteDialog, showInviteDialog] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [alertError, setAlertError] = useState(null);\n\n  const openInviteDialog = () => {\n    showInviteDialog(true);\n    setAlertError(null);\n  };\n  const closeInviteDialog = () => {\n    showInviteDialog(false);\n    setAlertError(null);\n  };\n\n  const dispatch = useContactsDispatch();\n  const { contacts } = useContactsState();\n  const { user } = useUserState();\n  const userEmail = userEmailFromLocalStorage();\n\n  const handleDeleteContactButton = (email) => {\n    deleteContact(userEmail, email, dispatch);\n  };\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n  const [openGroupChatForm, setOpenGroupChatForm] = useState(false);\n  const openChatForm = () => {\n    setOpenGroupChatForm(true);\n  };\n  const closeChatForm = () => {\n    setOpenGroupChatForm(false);\n  };\n  const alertSuccess = () => {\n    setIsAlertOpen(true);\n    setTimeout(() => {\n      showInviteDialog(false);\n      setIsAlertOpen(false);\n    }, 3000);\n  };\n  const handleSendEmail = async (email) => {\n    const isEmailValid = isEmail(email);\n    if (!isEmailValid) {\n      setIsAlertOpen(true);\n      setAlertError(\"Email is not valid. Please verify it is correct.\");\n      setTimeout(() => {\n        setIsAlertOpen(false);\n      }, 3000);\n      return;\n    }\n    try {\n      let res = \"\";\n      if (isEmailValid) {\n        setAlertError(null);\n        axios\n          .get(`/api/user/${email}`)\n          .then(async (response) => {\n            res = await axios.post(`/user/${userEmail}/invite`, {\n              contact: email,\n            });\n            alertSuccess();\n          })\n          .catch(async (err) => {\n            if (err.response.status === 400) {\n            res = await axios.post(`/mail/${email}/sendMail`);\n            res.status === 200 && alertSuccess();\n            }            \n          });\n      }\n    } catch (err) {\n      setAlertError(err.message);\n      setTimeout(() => {\n        setIsAlertOpen(false);\n      }, 3000);\n    }\n  };\n\n  const handleCopy = () => {\n    setCopied(true);\n    setTimeout(() => {\n      closeInviteDialog();\n    }, 1000);\n    setTimeout(() => {\n      setCopied(false);\n    }, 2000);\n  };\n\n  return (\n    <>\n      <ButtonBase\n        onClick={() => openInviteDialog()}\n        style={{ marginBottom: 10 }}\n      >\n        <div className={classes.inviteFriendsContainer}>\n          <AddIcon color=\"primary\" />\n          <Typography\n            variant=\"body2\"\n            color=\"primary\"\n            className={classes.typography}\n            gutterBottom\n          >\n            Invite Friends\n          </Typography>\n        </div>\n      </ButtonBase>\n      <ButtonBase onClick={() => openChatForm()} style={{ marginBottom: 10 }}>\n        <div className={classes.inviteFriendsContainer}>\n          <GroupAddIcon color=\"primary\" />\n          <Typography\n            variant=\"body2\"\n            color=\"primary\"\n            className={classes.typography}\n            gutterBottom\n          >\n            Create Group Chat\n          </Typography>\n        </div>\n      </ButtonBase>\n      <InvitationDialog\n        open={inviteDialog}\n        isAlertOpen={isAlertOpen}\n        alertError={alertError}\n        userId={user.id}\n        copied={copied}\n        setCopied={setCopied}\n        onClose={closeInviteDialog}\n        onCopy={handleCopy}\n        handleSendEmail={handleSendEmail}\n      />\n      <CreateGroupChat\n        open={openGroupChatForm}\n        onClose={closeChatForm}\n        contactsList={contacts}\n      />\n      <List className={classes.root}>\n        {!!contacts ? (\n          Object.keys(contacts).map((key, index) => (\n            <ContactItem\n              key={index}\n              name={contacts[key].name}\n              email={key}\n              pictureUrl={contacts[key].pictureUrl}\n              isOnline={contacts[key].isOnline}\n              index={index}\n              handleDeleteContactButton={handleDeleteContactButton}\n              contact={contacts[key]}\n              select={handleListItemClick}\n              selected={selectedIndex}\n            />\n          ))\n        ) : (\n          <Typography\n            variant=\"body1\"\n            color=\"primary\"\n            gutterBottom\n            style={{ color: \"black\", textAlign: \"center\" }}\n          >\n            No contacts\n          </Typography>\n        )}\n      </List>\n    </>\n  );\n};\n\nexport default ContactsList;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 0,\n    maxHeight: \"63vh\",\n    flexGrow: 1,\n    overflow: \"auto\",\n    backgroundColor: \"transparent\",\n    \"-ms-overflow-style\": \"none\",\n    \"scrollbar-width\": \"none\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n  },\n}));\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: theme.spacing(2),\n    paddingTop: 0,\n    paddingBottom: 0,\n    marginBottom: theme.spacing(1),\n    width: \"100%\",\n    borderRadius: theme.spacing(1),\n    backgroundColor: \"transparent\",\n  },\n  typography: {\n    fontSize: theme.spacing(2),\n    marginBottom: 0,\n    fontWeight: 600,\n  },\n  [`@media (max-width:400px)`]: {\n    root: {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n    },\n    typography: {\n      fontSize: \"1.3rem\",\n      marginBottom: theme.spacing(1),\n    },\n  },\n}));\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import React, { memo } from \"react\";\nimport { useStyles } from \"./style\";\nimport PropTypes from \"prop-types\";\nimport { Typography, ListItem, Button, Box } from \"@material-ui/core\";\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\";\n\nconst InvitationItem = ({\n  email,\n  handleApproveContact,\n  handleRejectContact,\n}) => {\n  const { width } = useWindowDimensions();\n  const classes = useStyles();\n\n  return (\n    <ListItem className={classes.root}>\n      <Typography variant=\"body2\" className={classes.typography} gutterBottom>\n        {email}\n      </Typography>\n      <Box component=\"span\">\n        <Button\n          variant=\"outlined\"\n          size={width > 400 ? \"small\" : \"medium\"}\n          color=\"primary\"\n          onClick={() => handleApproveContact(email)}\n        >\n          Approve\n        </Button>\n        <Button\n          variant=\"outlined\"\n          size={width > 400 ? \"small\" : \"medium\"}\n          color=\"secondary\"\n          style={{ marginLeft: 10 }}\n          onClick={() => handleRejectContact(email)}\n        >\n          Reject\n        </Button>\n      </Box>\n    </ListItem>\n  );\n};\n\nexport default memo(InvitationItem);\n\nInvitationItem.propTypes = {\n  email: PropTypes.string,\n  index: PropTypes.number,\n  handleApproveContact: PropTypes.func.isRequired,\n  handleRejectContact: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useStyles } from \"./style\";\nimport { List, Typography } from \"@material-ui/core\";\nimport InvitationItem from \"../../components/InvitationItem\";\nimport {\n  useContactsDispatch,\n  useContactsState,\n  fetchContactsAndInvitations,\n  approveContact,\n  rejectContact,\n  userEmailFromLocalStorage,\n} from \"../../context/contacts/contactsContext\";\n\nconst InvitationsList = () => {\n  const [invitationsList, setInvitationsList] = useState([]);\n  const classes = useStyles();\n\n  const dispatch = useContactsDispatch();\n  const { invitations } = useContactsState();\n\n  const userEmail = userEmailFromLocalStorage();\n\n  useEffect(() => {\n    userEmail &&\n      !invitations.length &&\n      fetchContactsAndInvitations(userEmail, dispatch);\n  }, [userEmail, invitations.length, dispatch]);\n\n  useEffect(() => {\n    setInvitationsList(invitations);\n  }, [invitations]);\n\n  const handleApproveContact = (emailToApprove) =>\n    approveContact(userEmail, emailToApprove, dispatch);\n\n  const handleRejectContact = (emailToReject) =>\n    rejectContact(userEmail, emailToReject, dispatch);\n\n  return (\n    <div className={classes.root}>\n      <List className={classes.root}>\n        {!!invitationsList.length ? (\n          invitationsList.map((invitation, index) => (\n            <InvitationItem\n              key={index}\n              email={invitation.email}\n              index={index}\n              handleApproveContact={handleApproveContact}\n              handleRejectContact={handleRejectContact}\n            />\n          ))\n        ) : (\n          <Typography\n            variant=\"body1\"\n            color=\"primary\"\n            gutterBottom\n            style={{ color: \"black\", textAlign: \"center\" }}\n          >\n            No contacts\n          </Typography>\n        )}\n      </List>\n    </div>\n  );\n};\nexport default InvitationsList;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStyles } from \"./style\";\nimport {\n  AppBar,\n  Tabs,\n  Tab,\n  Box,\n  ButtonBase,\n  Tooltip,\n  Collapse,\n  Typography,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ChatList from \"../ChatList\";\nimport ContactsList from \"../ContactsList\";\nimport InvitationsList from \"../InvitationsList\";\nimport { DebounceInput } from \"react-debounce-input\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport {\n  useContactsDispatch,\n  useContactsState,\n  fetchContactsAndInvitations,\n  findContacts,\n  userEmailFromLocalStorage,\n} from \"../../context/contacts/contactsContext\";\nimport {\n  useConversationsState,\n  useConversationsDispatch,\n  fetchConversations,\n} from \"../../context/conversations/conversationsContext\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst SidebarInfo = () => {\n  const classes = useStyles();\n  const [tabNumber, setTabNumber] = useState(0);\n  const [query, setQuery] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  const { width } = useWindowDimensions();\n\n  const dispatch = useContactsDispatch();\n  const { contacts, unknownUsers } = useContactsState();\n  const [usersData, setUsersData] = useState();\n  const conversationsDispatch = useConversationsDispatch();\n  const { conversations } = useConversationsState();\n  const userEmail = userEmailFromLocalStorage();\n\n  useEffect(() => {\n    userEmail && fetchContactsAndInvitations(userEmail, dispatch);\n  }, [fetchContactsAndInvitations]);\n  useEffect(() => {\n    if (tabNumber === 0 || tabNumber === 2) {\n      setQuery(\"\");\n    }\n  }, [tabNumber]);\n  useEffect(() => {\n    Object.keys(contacts).length &&\n      setUsersData({ ...contacts, ...unknownUsers });\n  }, [contacts, unknownUsers]);\n  useEffect(() => {\n    userEmail &&\n      !conversations.length &&\n      fetchConversations(userEmail, conversationsDispatch);\n  }, [userEmail, conversations.length, conversationsDispatch]);\n\n  const handleChange = (event, newValue) => {\n    setTabNumber(newValue);\n  };\n\n  const handleSearch = async (query) => {\n    setQuery(query);\n    const res = await findContacts(userEmail, query, dispatch);\n    setTabNumber(1);\n    if (!res) {\n      setIsOpen(true);\n      setTimeout(() => setIsOpen(false), 2000);\n    }\n  };\n\n  const handleSearchClear = () => {\n    fetchContactsAndInvitations(userEmail, dispatch);\n    setQuery(\"\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"static\"\n        style={{\n          color: \"black\",\n          maxWidth: \"100%\",\n          backgroundColor: \"#f5f7fb\",\n          boxShadow: \"none\",\n        }}\n      >\n        <Tabs\n          value={tabNumber}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n          variant=\"fullWidth\"\n          orientation={width > 400 ? \"horizontal\" : \"vertical\"}\n          className={classes.tabs}\n        >\n          <Tab\n            label=\"Chats\"\n            {...a11yProps(0)}\n            style={{\n              minWidth: \"33%\",\n              outline: \"none\",\n            }}\n          />\n          <Tab\n            label=\"Contacts\"\n            {...a11yProps(1)}\n            style={{ minWidth: \"33%\", outline: \"none\" }}\n          />\n          <Tab\n            label=\"Invitations\"\n            {...a11yProps(2)}\n            style={{ minWidth: \"33%\", outline: \"none\" }}\n          />\n        </Tabs>\n      </AppBar>\n\n      <div className={classes.search}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <DebounceInput\n          className={classes.debounceInput}\n          onChange={(e) => handleSearch(e.target.value)}\n          debounceTimeout={300}\n          value={query}\n          minLength={2}\n        />\n        <Tooltip title=\"Clear search\" placement=\"bottom\" arrow>\n          <ButtonBase onClick={handleSearchClear} className={classes.clearIcon}>\n            <ClearIcon />\n          </ButtonBase>\n        </Tooltip>\n      </div>\n      <Collapse in={isOpen} className={classes.collapse}>\n        <Alert severity=\"info\" className={classes.alert}>\n          <Typography variant=\"body1\">Oops, no contact found</Typography>\n        </Alert>\n      </Collapse>\n      <TabPanel value={tabNumber} index={0} className={classes.tabPanel}>\n        <ChatList usersData={usersData} />\n      </TabPanel>\n      <TabPanel value={tabNumber} index={1} className={classes.tabPanel}>\n        <ContactsList />\n      </TabPanel>\n      <TabPanel value={tabNumber} index={2} className={classes.tabPanel}>\n        <InvitationsList />\n      </TabPanel>\n    </div>\n  );\n};\n\nexport default SidebarInfo;\n","import React from \"react\";\nimport { useStyles } from \"./style\";\nimport SidebarNavBar from \"../SidebarNavBar\";\nimport SidebarInfo from \"../SidebarInfo\";\n\nconst Sidebar = () => {\n  const classes = useStyles();\n\n  return (\n    <section className={classes.root}>\n      <SidebarNavBar />\n      <SidebarInfo />\n    </section>\n  );\n};\n\nexport default Sidebar;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    flexGrow: 1,\n    height: \"100%\",\n    width: \"100%\",\n    backgroundColor: \"#fff\",   \n  },\n}));\n","import { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Badge from \"@material-ui/core/Badge\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    minHeight: \"10vh\",\n    backgroundColor: \"#fff\",\n    boxShadow: \" 0 15px 15px #f5f7fb\",\n  },\n  leftRightSideStyle: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20,\n  },\n  onOfflineStyle: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: 50,\n  },\n  typography: {\n    fontSize: \"0.9rem\",\n    fontWeight: 600,\n    color: \"#3A8DFF\",\n  },\n  [`@media (max-width:510px)`]: {\n    root: {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      padding: 20,\n    },\n    leftRightSideStyle: {\n      padding: 0,\n    },\n    typography: {\n      fontSize: \"1.3rem\",\n    },\n  },\n}));\n\nexport const StyledBadge = withStyles((theme) => ({\n  badge: {\n    backgroundColor: \"#44b700\",\n    color: \"#44b700\",\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    width: theme.spacing(1.1),\n    height: theme.spacing(1.1),\n    borderRadius: \"50%\",\n    \"&::after\": {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      borderRadius: \"50%\",\n      animation: \"$ripple 1.2s infinite ease-in-out\",\n      border: \"1px solid currentColor\",\n      content: '\"\"',\n    },\n  },\n  \"@keyframes ripple\": {\n    \"0%\": {\n      transform: \"scale(.8)\",\n      opacity: 1,\n    },\n    \"100%\": {\n      transform: \"scale(2.4)\",\n      opacity: 0,\n    },\n  },\n}))(Badge);\n","import React, { useState, useContext } from \"react\";\nimport { Typography, Switch, ButtonBase } from \"@material-ui/core\";\nimport { useStyles, StyledBadge } from \"./style\";\nimport { MoreHoriz } from \"@material-ui/icons\";\nimport { useUserState } from \"../../context/user/userContext\";\nimport ToggleLanguage from \"../../context/ToggleLanguage\";\n\nconst MainContentFieldNavBar = () => {\n  const [checked, setChecked] = useState(false);\n  const classes = useStyles();\n  const toggleLanguageContext = useContext(ToggleLanguage);\n  const { user } = useUserState();\n\n  const handleChange = () => {\n    setChecked(!checked);\n    toggleLanguageContext.setOriginal(!checked);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.leftRightSideStyle}>\n        <Typography\n          variant=\"h6\"\n          style={{ fontWeight: 600, marginLeft: 20, marginRight: 20 }}\n        >\n          {user.name}\n        </Typography>\n        <div className={classes.onOfflineStyle}>\n          <StyledBadge overlap=\"circle\" variant=\"dot\">\n            <span></span>\n          </StyledBadge>\n          <Typography variant=\"body2\" style={{ fontSize: \"0.8rem\" }}>\n            Online\n          </Typography>\n        </div>\n      </div>\n      <div className={classes.leftRightSideStyle}>\n        {checked ? (\n          <Typography variant=\"body2\" className={classes.typography}>\n            Original language\n          </Typography>\n        ) : (\n          <Typography\n            variant=\"body2\"\n            className={classes.typography}\n            style={{\n              color:'grey',\n              opacity: 0.5,\n            }}\n          >\n            Original language\n          </Typography>\n        )}\n        <Switch\n          checked={checked}\n          onChange={handleChange}\n          color=\"primary\"\n          name=\"checked\"\n          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n        />\n        <ButtonBase\n          onClick={() => console.log(\"Clicked\")}\n          style={{ marginLeft: 20 }}\n        >\n          <MoreHoriz />\n        </ButtonBase>\n      </div>\n    </div>\n  );\n};\n\nexport default MainContentFieldNavBar;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    height: \"90vh\",\n    padding: theme.spacing(2.5),\n    paddingTop: 0,\n  },\n  messegesView: {\n    width: \"100%\",\n    flexGrow: 1,\n    overflow: \"auto\",\n    backgroundColor: \"transparent\",\n    \"-ms-overflow-style\": \"none\",\n    \"scrollbar-width\": \"none\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n  },\n  messageInput: {\n    justifyContent: \"flex-end\",\n  },\n  [`@media (max-width:820px)`]: {\n    root: {\n      height: \"45vh\",\n    },\n  },\n}));\n\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    padding: theme.spacing(2),\n  },\n  messageView: {\n    display: \"flex\",\n    \"&.my\": {\n      justifyContent: \"flex-end\",\n    },\n    \"&.other\": {\n      justifyContent: \"flex-start\",\n    },\n  },\n  messageInfo: {\n    marginLeft: theme.spacing(2),\n    maxWidth: \"60%\"\n  },\n  messageDetails: {\n    fontSize: \"0.7em\",\n    \"&.my\": {\n      textAlign: \"right\",\n    },\n    \"&.other\": {\n      textAlign: \"left\",\n    },\n  },\n  messageText: {\n    borderRadius: 10,\n    padding: 10,\n    \"&.my\": {\n      textAlign: \"right\",\n      borderBottomRightRadius: 0,\n      background: \"lightgrey\",\n      color: \"black\",\n    },\n    \"&.other\": {\n      borderTopLeftRadius: 0,\n      background:\n        \"linear-gradient(130deg, rgba(39,31,208,1) 0%, rgba(32,167,253,1) 75%, rgba(106,194,255,1) 100%)\",\n      color: \"white\",\n    },\n  },\n  image: {\n    borderRadius: 10,\n    display: \"block\",\n    objectFit: \"contain\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    outline: \"none\",\n  },\n}));\n","import React, { memo } from \"react\";\nimport { useStyles } from \"./style\";\nimport { Typography, Avatar, ButtonBase } from \"@material-ui/core\";\nimport ISO6391 from 'iso-639-1';\nimport defaultAvatar from \"../UserAvatar/avatar.png\";\nconst MessageItem = (props) => {\n  const classes = useStyles();\n  const { sender, date, text, myMessage, image, handleModalOpen } = props;\n  const localDate = new Date(date);\n  const dateString = localDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  if(sender)\n  return (\n    <div className={classes.root}>\n      <div className={`${classes.messageView} ${myMessage ? 'my' : 'other'}`}>\n        {!myMessage && <Avatar\n          variant=\"circle\"\n          alt=\"Remy Sharp\"\n          src={sender.pictureUrl ? sender.pictureUrl.url : defaultAvatar}\n        />\n        }\n        <div className={classes.messageInfo}>\n          <Typography variant=\"body2\" className={`${classes.messageDetails} ${myMessage ? 'my' : 'other'}`}>\n            {sender.language && !myMessage &&\n              <img\n                alt={sender.language} \n                src={`https://unpkg.com/language-icons/icons/${ISO6391.getCode(sender.language)}.svg`} \n                width={\"20px\"} \n                height={\"20px\"} \n                style={{borderRadius:'10px', marginRight:'5px'}}></img>}\n            {!myMessage ? sender.name : ''} {dateString}\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            className={`${classes.messageText} ${myMessage ? \"my\" : \"other\"}`}\n          >\n            {image !== null && (\n              <ButtonBase\n                onClick={() => handleModalOpen(image.url)}\n                style={{ display: \"block\" }}\n              >\n                <img\n                  src={image.url}\n                  alt=\"userpicture\"\n                  width=\"150px\"\n                  height=\"150px\"\n                  className={classes.image}\n                ></img>\n              </ButtonBase>\n            )}\n            {text !== undefined && text}\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n  else return null;\n};\nexport default memo(MessageItem);\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  image: {\n    display: \"block\",\n    maxWidth: \"50%\",\n    maxHeight: \"80%\",\n    outline:'none',\n    objectFit: \"contain\",\n  },\n}));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStyles } from \"./style\";\nimport { Modal, Backdrop, Fade } from \"@material-ui/core\";\n\nconst PictureModal = ({ open, src, handleModalClose }) => {\n  const classes = useStyles();\n\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"user-image\"\n      className={classes.modal}\n      open={open}\n      onClose={handleModalClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={open}>\n        <img\n          src={src && src}\n          alt=\"userpicture\"          \n          className={classes.image}\n        ></img>\n      </Fade>\n    </Modal>\n  );\n};\n\nexport default PictureModal;\n\nPictureModal.propTypes = {\n  open: PropTypes.bool,\n  src: PropTypes.string,\n  handleModalClose: PropTypes.func,\n};\n","import axios from \"axios\";\n\nexport const translateText = async (text, language) => {\n  try {\n    const res = await axios.get(\n      `${process.env.REACT_APP_TRANSLATE_URL}/v2?target=${language}&key=${process.env.REACT_APP_API_KEY}&q=${text}`\n    );\n    return res.data.data.translations[0].translatedText;\n  } catch (err) {\n    throw Error(\"Oops, failed to translate\");\n  }\n};\n","import Axios from 'axios';\nimport { translateText } from \"../../context/messages/helper\"\nimport ISO6391 from 'iso-639-1';\nimport { addUknownUser } from \"../../context/contacts/contactsContext\";\nconst loadMessages = (email, room, setMessages, setUsers, usersData, unknownUsers, dispatch) => {\n    Axios.get(`/user/conversation/${room}`)\n        .then((response) => {\n            setMessages(response.data.conversation.messages)\n            setUsers(response.data.conversation.users)\n            response.data.conversation.users.forEach((userEmail) => {\n                if (!usersData[userEmail] && userEmail!==email) {\n                    Axios.get(`/api/user/${userEmail}`)\n                        .then((response) => {\n                            addUknownUser(userEmail, unknownUsers, dispatch)\n                        })\n                        .catch((err) => console.log(err))\n                }\n            })\n        })\n        .catch((err) => console.error(err));\n}\nconst addTextVersion = (newMsg, language, text) => {\n    return new Promise(async (resolve, reject) => {\n        try {\n            newMsg.textVersions[language] = await translateText(text, ISO6391.getCode(language))\n            resolve(newMsg)\n        }\n        catch (err) { reject(err); }\n    })\n\n}\nconst createMessageObject = async (date, text, user, languages, imageUrl) => {\n    let newMsg = {\n        sender: user.email,\n        date: date,\n        textVersions: {},\n    };\n    if (imageUrl) {\n        newMsg.image = imageUrl;\n    }\n    if (text) {\n        newMsg.textVersions[user.language] = text\n\n        if (languages) {\n            let promises = languages.map(async (language) => {\n                if (language !== user.language) {\n                    return addTextVersion(newMsg, language, text);\n                }\n            })\n            await Promise.all(promises);\n        }\n\n    }\n    return newMsg;\n};\nexport {\n    loadMessages,\n    createMessageObject\n}","import React from \"react\";\nimport { ButtonBase } from \"@material-ui/core\"\nimport CloseIcon from \"@material-ui/icons/Close\";\nconst ImageInputView = ({imageUrl, handleClose}) => {\n    return (\n        <div\n            style={{\n                borderRadius: 10,\n                marginRight: 10,\n            }}\n        >\n            <ButtonBase\n                style={{\n                    position: \"absolute\",\n                    top: -5,\n                    left: 60,\n                }}\n                onClick={handleClose}\n            >\n                <CloseIcon />\n            </ButtonBase>\n            <img\n                src={imageUrl.url}\n                alt=\"userpicture\"\n                width=\"50px\"\n                height=\"50px\"\n                style={{\n                    borderRadius: 10,\n                    display: \"block\",\n                    outline: \"none\",\n                }}\n            ></img>\n        </div>\n    )\n}\nexport default ImageInputView;","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Menu } from \"@material-ui/core\";\nexport const StyledMenu = withStyles({\n    paper: {\n        border: \"1px solid #d3d4d5\",\n    },\n})((props) => (\n    <Menu\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n        }}\n        transformOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"right\",\n        }}\n        {...props}\n    />\n));\n","import React, { useState } from \"react\";\nimport { StyledMenu } from \"./style\";\nimport { ButtonBase, Tooltip } from \"@material-ui/core\";\nimport { Picker } from \"emoji-mart\";\nimport SentimentSatisfiedOutlinedIcon from \"@material-ui/icons/SentimentSatisfiedOutlined\";\nconst EmojiButton = ({ conversation, setMessage, message }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const handleEmojiClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <>\n      <Tooltip title=\"Choose an emoji\" placement=\"top\" arrow>\n        <span>\n          <ButtonBase\n            aria-controls=\"customized-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleEmojiClick}\n            disabled={conversation ? false : true}\n            style={{ marginRight: 15 }}\n          >\n            <SentimentSatisfiedOutlinedIcon />\n          </ButtonBase>\n        </span>\n      </Tooltip>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <Picker\n          set=\"google\"\n          title=\"Peppermint chat\"\n          onSelect={(emoji) => setMessage(message.concat(emoji.native))}\n          emojiSize={20}\n          onClick={handleClose}\n        />\n      </StyledMenu>\n    </>\n  );\n};\nexport default EmojiButton;\n","import React from \"react\";\nimport { ButtonBase, Tooltip } from \"@material-ui/core\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nconst AddPhotoButton = ({\n  handleImageSelector,\n  conversation,\n  imageEl,\n  handleImageSave,\n  handleClose,\n}) => {\n  return (\n    <>\n      <Tooltip title=\"Add photos\" placement=\"top\" arrow>\n        <span>\n          <ButtonBase\n            aria-label=\"select image\"\n            onClick={handleImageSelector}\n            disabled={conversation ? false : true}\n          >\n            <FileCopyOutlinedIcon />\n          </ButtonBase>\n        </span>\n      </Tooltip>\n      <DropzoneDialog\n        open={Boolean(imageEl)}\n        onSave={handleImageSave}\n        showPreviews={true}\n        maxFileSize={3000000}\n        onClose={handleClose}\n      />\n    </>\n  );\n};\nexport default AddPhotoButton;\n","import React, { useState, useEffect, useRef, useContext, memo } from \"react\";\nimport { useStyles } from \"./style\";\nimport { TextField, InputAdornment } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport MessageItem from \"../../components/MessageItem\";\nimport socket from \"../../socket-client/socket\";\nimport Axios from \"axios\";\nimport SelectConversation from \"../../context/SelectConversation\";\nimport ToggleLanguage from \"../../context/ToggleLanguage\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport {\n  uploadUserImage,\n  deleteUserImage,\n} from \"../../services/uploadDeleteUserImage\";\nimport PictureModal from \"../../components/PictureModal\";\nimport {\n  useContactsState,\n  useContactsDispatch,\n  updateContacts,\n} from \"../../context/contacts/contactsContext\";\nimport {\n  fetchConversations,\n  useConversationsDispatch,\n} from \"../../context/conversations/conversationsContext\";\nimport { loadMessages, createMessageObject } from \"./helper\";\nimport ImageInputView from \"../../components/ImageInputView\";\nimport EmojiButton from \"../../components/EmojiButton\";\nimport AddPhotoButton from \"../../components/AddPhotoButton\";\n\nconst MessageField = ({ user }) => {\n  let currentTime, senderData;\n  const classes = useStyles();\n  const dispatch = useContactsDispatch();\n  const dispatchConv = useConversationsDispatch();\n  const { contacts, unknownUsers } = useContactsState();\n  const context = useContext(SelectConversation);\n\n  const ToggleLanguageContext = useContext(ToggleLanguage);\n\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [usersData, setUsersData] = useState({});\n  const [languages, setLanguages] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  const [users, setUsers] = useState([]);\n\n  const [imageEl, setImageEl] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [largeScreenPicture, setLargeScreenPicture] = useState(null);\n  const handleSendMessage = (e) => (e.key === \"Enter\" ? sendMessage(e) : null);\n\n  const handleImageSelector = (e) => {\n    setImageEl(e.currentTarget);\n  };\n  const handleImageSelectorClose = () => {\n    setImageEl(null);\n  };\n  const handleImageSave = async (files) => {\n    setImageEl(null);\n    const imageData = await uploadUserImage(files[0], null, user.email);\n    setImageUrl(imageData);\n  };\n  const handleCloseSmallImage = async () => {\n    await deleteUserImage(imageUrl.name);\n    setImageUrl(null);\n  };\n  const handleModalOpen = (imageUrl) => {\n    setLargeScreenPicture(imageUrl);\n    setModalOpen(true);\n  };\n  const handleModalClose = () => {\n    setModalOpen(false);\n    setLargeScreenPicture(null);\n  };\n  const saveMessage = async (msg) => {\n    await Axios.post(\n      `${process.env.REACT_APP_BACKEND_URL}/user/${user.email}/conversation/${context.conversation}/newMessage`,\n      msg\n    );\n  };\n  const sendMessage = async (event) => {\n    event.preventDefault();\n    currentTime = new Date().toISOString();\n    if (message || imageUrl) {\n      createMessageObject(currentTime, message, user, languages, imageUrl)\n        .then((msg) => {\n          socket.emit(\"message\", msg, context.conversation, () => {\n            saveMessage(msg);\n            setMessage(\"\");\n            setImageUrl(null);\n            scrollToBottom();\n            if (messages.length === 0)\n              fetchConversations(user.email, dispatchConv);\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    setUsersData({ ...contacts, ...unknownUsers });\n  }, [contacts, unknownUsers]);\n  useEffect(() => {\n    socket.emit(\n      \"join\",\n      { email: user.email, room: context.conversation },\n      (error) => {\n        if (error) alert(error);\n      }\n    );\n  }, [context.conversation, user.email]);\n  useEffect(() => {\n    setMessages([]);\n    socket.on(\"onlineUsers\", (data) => {\n      updateContacts(data, contacts, dispatch);\n    });\n    socket.on(\"message\", (message) => {\n      setMessages((messages) => [...messages, message]);\n      fetchConversations(user.email, dispatchConv);\n    });\n    if (context.conversation !== undefined) {\n      loadMessages(\n        user.email,\n        context.conversation,\n        setMessages,\n        setUsers,\n        usersData,\n        unknownUsers,\n        dispatch\n      );\n    }\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [\n    context.conversation,\n    user,\n    unknownUsers,\n    dispatch,\n    usersData,\n    dispatchConv,\n    contacts,\n  ]);\n  useEffect(() => {\n    if (users.length > 0) {\n      Axios.get(`/api/user/${users.join(\",\")}/languages`)\n        .then((response) => {\n          setLanguages(response.data.languages);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [users, usersData]);\n  return (\n    <div className={classes.root}>\n      <div className={classes.messegesView}> \n      \n        {!!messages.length > 0 &&\n          messages.map((msg, i) => {\n            if (msg && (msg.textVersions || msg.image)) {\n              senderData = usersData ? usersData[msg.sender] : undefined;\n              return (\n                <div key={i}>\n                  <MessageItem\n                    sender={msg.sender === user.email ? user : senderData}contactsContext\n                    date={msg.date}\n                    text={\n                      msg.textVersions\n                        ? ToggleLanguageContext.original\n                          ? msg.textVersions[Object.keys(msg.textVersions)[0]]\n                          : msg.textVersions[user.language]\n                        : null\n                    }\n                    myMessage={msg.sender === user.email}\n                    image={msg.image ? msg.image : null}\n                    handleModalOpen={handleModalOpen}\n                    handleModalClose={handleModalClose}\n                  />\n                </div>\n              );\n            } else return null;\n          })}\n        <div ref={messagesEndRef} />\n      </div>\n      <PictureModal\n        open={modalOpen}\n        handleModalClose={handleModalClose}\n        src={largeScreenPicture && largeScreenPicture}\n      />\n      <TextField\n        className={classes.messageInput}\n        autoFocus={true}\n        variant=\"outlined\"\n        placeholder=\"message...\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        onKeyPress={(e) => handleSendMessage(e)}\n        autoComplete=\"off\"\n        fullWidth\n        disabled={context.conversation ? false : true}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              {imageUrl !== null && (\n                <ImageInputView\n                  imageUrl={imageUrl}\n                  handleClose={handleCloseSmallImage}\n                />\n              )}\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <EmojiButton\n                conversation={context.conversation}\n                setMessage={setMessage}\n                message={message}\n              />\n              <AddPhotoButton\n                handleImageSelector={handleImageSelector}\n                conversation={context.conversation}\n                imageEl={imageEl}\n                handleImageSave={handleImageSave}\n                handleClose={handleImageSelectorClose}\n              />\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  );\n};\nexport default memo(MessageField);\nMessageField.propTypes = {\n  user: PropTypes.shape({\n    language: PropTypes.string,\n    email: PropTypes.string,\n  }),\n};\n","import React from \"react\";\nimport { useStyles } from \"./style\";\nimport MainContentFieldNavBar from \"../MainContentFieldNavBar\";\nimport MessageField from \"../MessageField\";\nimport { useUserState } from \"../../context/user/userContext\";\n\nconst MainContentField = () => {\n  const { user } = useUserState();\n\n  const classes = useStyles();\n\n  return (\n    <section className={classes.root}>\n      <MainContentFieldNavBar />\n      {!!user && <MessageField user={user} />}\n    </section>\n  );\n};\n\nexport default MainContentField;\n","import React, { useState } from \"react\";\nimport { useStyles } from \"./style\";\nimport Sidebar from \"../Sidebar\";\nimport MainContentField from \"../MainContentField\";\nimport SelectConversation from \"../../context/SelectConversation\"\nimport ToggleLanguage from \"../../context/ToggleLanguage\"\nconst MainPage = () => {\n  const classes = useStyles();\n  const [conversation, setConversation] = useState()\n  const [original, setOriginal] = useState(false)\n\n  return (\n    <main className={classes.root}>\n      <SelectConversation.Provider value={{ conversation, setConversation }}>\n        <ToggleLanguage.Provider value={{ original, setOriginal }}>\n          <Sidebar />\n          <MainContentField />\n        </ToggleLanguage.Provider>\n      </SelectConversation.Provider>\n    </main>\n  );\n};\n\nexport default MainPage;\n"],"sourceRoot":""}