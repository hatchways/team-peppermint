{"version":3,"sources":["components/bgImage/index.js","assets/login-signup-bgImage.png","components/formPageHeader/index.js","components/userAuthForm/style.js","components/userAuthForm/index.js","containers/SignupPage/index.js"],"names":["useStyles","makeStyles","imageContainer","backgroundImage","bgImage","backgroundRepeat","backgroundSize","height","width","marginRight","gradientContainer","display","justifyItems","alignItems","iconStyle","fontSize","color","textStyle","fontWeight","textAlign","marginBottom","marginTop","BackgroundImage","classes","className","module","exports","theme","container","flexDirection","justifyContent","paddingTop","button","padding","backgroundColor","boxShadow","text","linkText","textDecoration","FormPageHeader","questionText","buttonText","pageNav","toLowerCase","variant","to","root","formField","textField","marginLeft","spacing","header","languageHeader","ctaBTN","margin","capitalize","require","userEmail","userEmailFromLocalStorage","referrer","parseUrl","window","location","href","search","split","Alert","props","elevation","UserAuthForm","validEmail","validPassword","validName","headerText","useState","name","setName","email","setEmail","password","setPassword","language","setLanguage","open","setOpen","isAlert","setIsAlert","error","setError","dispatch","useUserDispatch","history","useHistory","touched","setTouched","nameHelperText","setNameHelperText","emailHelperText","setEmailHelperText","passwordHelperText","setPasswordHelperText","createInvitation","push","handleBlur","field","evt","preventDefault","errors","length","validateInput","isDisabled","Object","keys","some","x","validateEmail","test","validateName","validatePass","resetInputs","handleSubmit","event","a","undefined","newUser","Axios","post","process","REACT_APP_BACKEND_URL","loginRes","socket","emit","setUserData","data","token","user","localStorage","setItem","response","msg","console","log","handleAlertClose","onSubmit","TextField","label","required","type","onChange","target","value","onBlur","helperText","InputLabel","id","Select","labelId","onClose","onOpen","MenuItem","default","Button","disableElevation","disabled","Snackbar","autoHideDuration","severity","SignupPage","style","flexGrow","item","xs-12","xs"],"mappings":"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","file":"static/js/8.7f85bc46.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport bgImage from \"../../assets/login-signup-bgImage.png\";\nimport SmsRoundedIcon from \"@material-ui/icons/SmsRounded\";\nimport TranslateRoundedIcon from \"@material-ui/icons/TranslateRounded\";\n\nconst useStyles = makeStyles({\n  imageContainer: {\n    backgroundImage: `url(${bgImage})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    height: \"100vh\",\n    width: \"40vw\",\n    marginRight: 20,\n  },\n  gradientContainer: {\n    backgroundImage: \"linear-gradient(#3a8cffca, #86b8ffc9)\",\n    height: \"100vh\",\n    width: \"40vw\",\n    display: \"grid\",\n    justifyItems: \"center\",\n    alignItems: \"center\",\n  },\n  iconStyle: {\n    fontSize: 70,\n    color: \"rgba(255, 255, 255, 0.80)\",\n  },\n  textStyle: {\n    color: \"rgba(255, 255, 255, 0.95)\",\n    fontWeight: \"200\",\n    fontSize: 40,\n    width: \"70%\",\n    textAlign: \"center\",\n    marginBottom: -80,\n    marginTop: -80,\n  },\n  [`@media (max-width:560px)`]: {\n    imageContainer: {\n      height: \"20vh\",\n      width: \"100vw\",\n    },\n    gradientContainer: {\n      height: \"20vh\",\n      width: \"100vw\",\n    },\n    textStyle: {\n      fontSize: 25,\n    },\n  },\n});\n\nexport default function BackgroundImage() {\n  const classes = useStyles();\n  return (\n    <div className={classes.imageContainer}>\n      <div className={classes.gradientContainer}>\n        <SmsRoundedIcon className={classes.iconStyle} />\n        <h3 className={classes.textStyle}>\n          Converse with anyone with any language\n        </h3>\n        <TranslateRoundedIcon className={classes.iconStyle} />\n      </div>\n    </div>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/login-signup-bgImage.48ff3fda.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    alignItems: \"center\",\n    justifyContent: \"end\",\n    paddingTop: 15,\n  },\n  button: {\n    marginRight: 30,\n    padding: \"15px 40px\",\n    backgroundColor: \"#fff\",\n    boxShadow: \"0 2px 8px 0 rgba(0, 0, 0, 0.19)\",\n  },\n  text: {\n    marginRight: 25,\n    color: \"rgb(180, 180, 180)\",\n  },\n  linkText: {\n    color: \"#3A8DFF\",\n    textDecoration: \"none\",\n  },\n  [`@media (max-width:560px)`]: {\n    container: {\n      justifyContent: \"center\",\n    },\n    button: {\n      marginRight: 0,\n    },\n  },\n}));\n\nexport default function FormPageHeader({ questionText, buttonText }) {\n  const classes = useStyles();\n\n  //get conditional routing\n  function checkNav(text) {\n    if (text.toLowerCase() === \"login\") {\n      return \"/login\";\n    } else {\n      return \"/signup\";\n    }\n  }\n  let pageNav = checkNav(buttonText);\n\n  return (\n    <div className={classes.container}>\n      <Button className={classes.button} variant=\"contained\">\n        <Link to={pageNav} className={classes.linkText}>\n          {buttonText}\n        </Link>\n      </Button>\n      <p className={classes.text}>{questionText}</p>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: \"40px\",\n  },\n  formField: {\n    width: \"80%\",\n    marginBottom: \"40px\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"25ch\",\n  },\n  header: {\n    marginTop: \"80px\",\n  },\n  languageHeader: {\n    marginTop: \"20px\",\n  },\n  ctaBTN: {\n    color: \"#fff\",\n    backgroundColor: \"#3A8DFF\",\n    width: \"40%\",\n    margin: \"0 17.5%\",\n    padding: \"20px 30px\",\n  },\n  [`@media (max-width:560px)`]: {\n    root: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    header: {\n      textAlign: \"center\",\n      fontSize:'1.5em'\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { useStyles } from \"./style\";\n\nimport { useUserDispatch, setUserData } from \"../../context/user/userContext\";\n\nimport { useHistory } from \"react-router\";\n\nimport Axios from \"axios\";\nimport socket from \"../../socket-client/socket\";\n\nimport {\n  userEmailFromLocalStorage,\n  createInvitation,\n} from \"../../context/contacts/contactsContext\";\nconst capitalize = require(\"capitalize\");\n\nconst userEmail = userEmailFromLocalStorage();\nconst parseUrl = require(\"parse-url\");\n\nconst pageUrl = window.location.href;\nconst referrer = parseUrl(pageUrl).search.split(\"=\")[1];\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function UserAuthForm({ headerText }) {\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [language, setLanguage] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [isAlert, setIsAlert] = useState(false);\n  const [error, setError] = useState();\n  let validEmail, validPassword, validName;\n\n  const dispatch = useUserDispatch();\n  const history = useHistory();\n\n  const [touched, setTouched] = useState({\n    name: false,\n    email: false,\n    password: false,\n  });\n  const [nameHelperText, setNameHelperText] = useState(\"\");\n  const [emailHelperText, setEmailHelperText] = useState(\"\");\n  const [passwordHelperText, setPasswordHelperText] = useState(\"\");\n\n  // if user logged in and gets invitation link with referrer then invitaions created automatically for both sides\n  if (userEmail && referrer) {\n    createInvitation(userEmail, referrer);\n    history.push(\"/\");\n  }\n\n  function validateInput(name, email, password) {\n    // true means invalid, so our conditions got reversed\n    if (headerText === \"Create an account.\") {\n      return {\n        name: name.length === 0,\n        email: email.length === 0,\n        password: password.length === 0,\n      };\n    } else {\n      return {\n        email: email.length === 0,\n        password: password.length === 0,\n      };\n    }\n  }\n\n  const handleBlur = (field) => (evt) => {\n    evt.preventDefault();\n    setTouched({ ...touched, [field]: true });\n  };\n\n  const handleLanguage = (event) => {\n    setLanguage(event.target.value);\n  };\n  const handleName = (event) => {\n    setName(event.target.value);\n    if (validateName(event.target.value)) {\n      setNameHelperText(\"\");\n    }\n  };\n  const handleEmail = (event) => {\n    setEmail(event.target.value);\n    if (validateEmail(event.target.value)) {\n      setEmailHelperText(\"\");\n    }\n  };\n  const handlePassword = (event) => {\n    setPassword(event.target.value);\n    if (validatePass(event.target.value)) {\n      setPasswordHelperText(\"\");\n    }\n  };\n\n  const errors = validateInput(name, email, password);\n  const isDisabled = Object.keys(errors).some((x) => errors[x]);\n\n  function validateEmail(email) {\n    let regex = /^[^@]+@[^@]+\\.[^@]+$/;\n    validEmail = regex.test(email);\n    if (!validEmail) setEmailHelperText(\"That is not an email\");\n    return validEmail;\n  }\n  function validateName(name) {\n    if (name.length === 0) setNameHelperText(\"Name is required\");\n    return name.length > 0;\n  }\n  function validatePass(password) {\n    validPassword = password.length >= 6;\n    if (!validPassword)\n      setPasswordHelperText(\"Password needs to be at least 6 characters\");\n\n    return validPassword;\n  }\n\n  function isFormValid() {\n    //check individual\n    validEmail = validateEmail(email);\n    validPassword = validatePass(password);\n\n    if (validEmail) setEmailHelperText(\"\");\n    if (validPassword) setPasswordHelperText(\"\");\n    if (headerText === \"Create an account.\") {\n      validName = validateName(name);\n      if (validName) setNameHelperText(\"\");\n    }\n    //check entire form\n    return (\n      (validName === undefined ? true : validName) &&\n      validEmail &&\n      validPassword\n    );\n  }\n\n  function resetInputs() {\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setLanguage(\"\");\n  }\n\n  const handleSubmit = async (event) => {\n    if (event) event.preventDefault();\n    setError();\n    try {\n      //make sure that form is valid\n\n      if (isFormValid()) {\n        if (headerText === \"Create an account.\") {\n          //Signup route\n\n          //UI response\n          setIsAlert(true);\n          //set newUser to register and then post to backend, then reset fields\n          const newUser = {\n            name: capitalize(name),\n            email: email,\n            password: password,\n            language: language,\n            referrer: referrer,\n          };\n          await Axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/user/signup`, newUser);\n          const loginRes = await Axios.post(\n            `${process.env.REACT_APP_BACKEND_URL}/api/user/login`,\n            {\n              email,\n              password,\n            }\n          );\n          socket.emit(\"login\", email);\n          setUserData(loginRes.data.token, loginRes.data.user, dispatch);\n          localStorage.setItem(\"auth-token\", loginRes.data.token);\n          resetInputs();\n          history.push(\"/\");\n        } else {\n          //login route\n          //UI response\n          setIsAlert(true);\n          //set user to login and then post to backend, then reset fields\n          const user = {\n            email: email,\n            password: password,\n          };\n          const loginRes = await Axios.post(\n            `${process.env.REACT_APP_BACKEND_URL}/api/user/login`,\n            user\n          );\n          socket.emit(\"login\", email);\n          setUserData(loginRes.data.token, loginRes.data.user, dispatch);\n          localStorage.setItem(\"auth-token\", loginRes.data.token);\n          resetInputs();\n          history.push(\"/\");\n        }\n      }\n    } catch (err) {\n      if (err.response.data.msg) setError(err.response.data.msg);\n      else console.log(err);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleAlertClose = () => {\n    setIsAlert(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <h2 className={classes.header}>{headerText}</h2>\n      <form onSubmit={handleSubmit} className={classes.root}>\n        {headerText === \"Create an account.\" ? (\n          <TextField\n            label=\"Choose your display name\"\n            className={classes.formField}\n            name=\"name\"\n            required\n            type=\"text\"\n            onChange={handleName}\n            value={name}\n            onBlur={handleBlur(\"name\")}\n            helperText={nameHelperText}\n            error={nameHelperText ? true : false}\n          />\n        ) : null}\n        <TextField\n          label=\"E-mail address\"\n          className={classes.formField}\n          name=\"email\"\n          required\n          type=\"text\"\n          onChange={handleEmail}\n          value={email}\n          onBlur={handleBlur(\"email\")}\n          helperText={emailHelperText}\n          error={emailHelperText ? true : false}\n        />\n        <TextField\n          label=\"Password\"\n          className={classes.formField}\n          required\n          type=\"password\"\n          name=\"password\"\n          onChange={handlePassword}\n          value={password}\n          onBlur={handleBlur(\"password\")}\n          helperText={passwordHelperText}\n          error={passwordHelperText ? true : false}\n        />\n        {headerText === \"Create an account.\" ? (\n          <>\n            <InputLabel id=\"label\" className={classes.languageHeader}>\n              Select primary language\n            </InputLabel>\n            <Select\n              labelId=\"label\"\n              id=\"select\"\n              open={open}\n              onClose={handleClose}\n              onOpen={handleOpen}\n              value={language}\n              onChange={handleLanguage}\n              className={classes.formField}\n              label=\"Select primary language\"\n            >\n              <MenuItem value=\"english\" default>\n                English\n              </MenuItem>\n              <MenuItem value=\"chinese\">Chinese (Mandarin)</MenuItem>\n              <MenuItem value=\"spanish\">Spanish</MenuItem>\n              <MenuItem value=\"french\">French</MenuItem>\n              <MenuItem value=\"russian\">Russian</MenuItem>\n            </Select>\n          </>\n        ) : null}\n\n        <Button\n          variant=\"contained\"\n          disableElevation\n          className={classes.ctaBTN}\n          type=\"submit\"\n          disabled={isDisabled}\n        >\n          Submit\n        </Button>\n      </form>\n\n      {/* Welcome Message */}\n\n      <Snackbar\n        open={isAlert}\n        autoHideDuration={5000}\n        onClose={handleAlertClose}\n      >\n        {error ? (\n          <Alert open={isAlert} onClose={handleAlertClose} severity=\"error\">\n            {error}\n          </Alert>\n        ) : (\n          <Alert open={isAlert} onClose={handleAlertClose}>\n            {headerText === \"Create an account.\" ? \"Welcome!\" : \"Welcome Back\"}\n          </Alert>\n        )}\n      </Snackbar>\n    </>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport BackgroundImage from \"../../components/bgImage\";\nimport UserAuthForm from \"../../components/userAuthForm\";\nimport FormPageHeader from \"../../components/formPageHeader\";\n\nfunction SignupPage() {\n  \n  return (\n    <div style={{ flexGrow: 1 }}>\n      <Grid container spacing={1}>\n        <Grid item xs-12='true'>\n          <BackgroundImage />\n        </Grid>\n        <Grid item xs>\n          <FormPageHeader\n            questionText=\"Already have an account?\"\n            buttonText=\"Login\"\n          />\n          <UserAuthForm headerText=\"Create an account.\" />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default SignupPage;\n"],"sourceRoot":""}